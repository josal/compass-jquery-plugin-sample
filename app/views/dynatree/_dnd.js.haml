:javascript
  $(function(){
  // --- Initialize first Dynatree -------------------------------------------
    $("#tree").dynatree({
      initAjax: { 
        url: "data3?format=json"
      },
      onActivate: function(dtnode) {
        $("#echoActive").text(dtnode.data.title + "(" + dtnode.data.key + ")");
      },
      onDeactivate: function(dtnode) {
        $("#echoActive").text("-");
      },
      dnd: {
        onDragStart: function(dtnode) {
          // This function MUST be defined to enable dragging for the tree.
          //  Return false to cancel dragging of dtnode.
          // 
          // logMsg("tree.onDragStart(%o)", dtnode);
          return true;
        },
        onDragStop: function(dtnode) {
          // This function is optional.
          // logMsg("tree.onDragStop(%o)", dtnode);
        },
        autoExpandMS: 1000,
        onDragEnter: function(node, sourceNode) {
          // sourceNode may be null for non-dynatree droppables. 
          // Return false to disallow dropping on node. In this case 
          // onDragOver and onDragLeave are not called.
          // Return 'over', 'before, or 'after' to force a hitMode.
          // Any other return value will calc the hitMode from the cursor position.
          //
          // logMsg("tree.onDragEnter(%o, %o)", node, sourceNode);
          // Prevent dropping a parent below it's own child
          if(node.isDescendantOf(sourceNode))
            return false;
            // if(node === sourceNode)
            //   return false;
            // return "over";
        },
        onDragOver: function(node, sourceNode, hitMode) {
          // Return false to disallow dropping this node.
          //
          // logMsg("tree.onDragOver(%o, %o, %o)", node, sourceNode, hitMode);
          // Prohibit creating childs in non-folders (only sorting allowed)
          if( !node.isFolder && hitMode == "over" )
            return "after";
        },
        onDrop: function(node, sourceNode, hitMode) {
          // This function MUST be defined to enable dropping of items on the tree. 
          //
          // logMsg("tree.onDrop(%o, %o, %s)", node, sourceNode, hitMode);
          sourceNode.move(node, hitMode);
          // expand the drop target
          sourceNode.expand(true);
        },
        onDragLeave: function(node, sourceNode) {
          // Always called if onDragEnter was called. 
          //
          // logMsg("tree.onDragLeave(%o, %o)", node, sourceNode);
        }
      }
    });
  });
  	