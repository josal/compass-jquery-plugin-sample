!!! Strict
%html
  %head
    %meta{ :content => "text/html; charset=ISO-8859-1", "http-equiv" => "content-type" }
      %title
        Dynatree - Example
      %script{ :src => "../lib/jquery/jquery.js", :type => "text/javascript" }
      %script{ :src => "../lib/jquery/ui.core.js", :type => "text/javascript" }
      %script{ :src => "../lib/jquery/jquery.cookie.js", :type => "text/javascript" }
      %link{ :href => "../src/skin/ui.dynatree.css", :rel => "stylesheet", :type => "text/css" }
        %script{ :src => "../src/jquery.dynatree.js", :type => "text/javascript" }
        /
          Start_Exclude: This block is not part of the sample code
        %link{ :href => "prettify.css", :rel => "stylesheet" }
          %script{ :src => "prettify.js", :type => "text/javascript" }
          %link{ :href => "sample.css", :rel => "stylesheet", :type => "text/css" }
            %script{ :src => "sample.js", :type => "text/javascript" }
            /
              End_Exclude
            %script{ :type => "text/javascript" }
              $(function(){
              $("#tree").dynatree({
              title: "Event samples",
              rootVisible: true,
              \//			checkbox: true,
              \//			persist: true,
              onQueryActivate: function(activate, dtnode) {
              logMsg("onQueryActivate(%o, %o)", activate, dtnode);
              \//				return false;
              },
              onActivate: function(dtnode) {
              logMsg("onActivate(%o)", dtnode);
              $("#echoActive").text(dtnode.data.title);
              if( dtnode.data.url )
              window.open(dtnode.data.url);
              },
              onDeactivate: function(dtnode) {
              logMsg("onDeactivate(%o)", dtnode);
              $("#echoActive").text("-");
              },
              
              onQuerySelect: function(select, dtnode) {
              logMsg("onQuerySelect(%o, %o)", select, dtnode);
              if( dtnode.data.isFolder )
              return false;
              },
              onSelect: function(select, dtnode) {
              logMsg("onSelect(%o, %o)", dtnode);
              var s = dtnode.tree.getSelectedNodes().join(", ");
              $("#echoSelected").text(s);
              },
              
              onQueryExpand: function(expand, dtnode) {
              logMsg("onQueryExpand(%o, %o)", expand, dtnode);
              \//				return false;
              },
              onExpand: function(expand, dtnode) {
              logMsg("onExpand(%o, %o)", expand, dtnode);
              },
              
              onLazyRead: function(dtnode) {
              logMsg("onLazyRead(%o)", dtnode);
              },
              
              onFocus: function(dtnode) {
              logMsg("onFocus(%o)", dtnode);
              $("#echoFocused").text(dtnode.data.title);
              },
              onBlur: function(dtnode) {
              logMsg("onBlur(%o)", dtnode);
              $("#echoFocused").text("-");
              },
              
              onClick: function(dtnode, event) {
              logMsg("onClick(%o, %o)", dtnode, event);
              if( event.shiftKey && dtnode.isLazy )
              alert("ctrl");
              \//return false;
              },
              onDblClick: function(dtnode, event) {
              logMsg("onDblClick(%o, %o)", dtnode, event);
              dtnode.toggleSelect();
              },
              onKeydown: function(dtnode, event) {
              logMsg("onKeydown(%o, %o)", dtnode, event);
              switch( event.which ) {
              case 32: // [space]
              dtnode.toggleSelect();
              return false;
              }
              },
              onKeypress: function(dtnode, event) {
              logMsg("onKeypress(%o, %o)", dtnode, event);
              }
              });
              
              });
  %body.example
    %h1
      Example: Events
    %p.description
      Implements all callbacks.
      %br
        Use the Firebug plugin in Firefox to see the event log.
        %br
          The 'links' folders contain nodes with an custom data.url option.
          This is used to open the URL in the onActivate event.
          %br
            Note: the lazy reading is not implemented in this example.
    #tree
      %ul
        %li.folder
          jQuery links
          %ul
            %li{ :data => "url: 'http://jquery.com'" }
              jQuery home
              %li{ :data => "url: 'http://docs.jquery.com'" }
                jQuery docs
          %li.folder
            Other links
            %ul
              %li{ :data => "url: 'http://code.google.com'" }
                Google Code
            %li.folder
              Lazy loading
              %ul
                %li#k123.lazy
                  This is a lazy loading document with key k123.
                  %li#k234.lazy.folder
                    This is a lazy loading folder with key k234.
    %div
      Active node:
      %span#echoActive
        \-
    %div
      Selected node list:
      %span#echoSelected
        \-
    %div
      Focused node:
      %span#echoFocused
        \-
    /
      Start_Exclude: This block is not part of the sample code
    %hr
      %p.sample-links.no_code
        %a.hideInsideFS{ :href => "http://dynatree.googlecode.com" }
          jquery.dynatree.js project home
        %a.hideOutsideFS{ :href => "#" }
          Link to this page
        %a.hideInsideFS{ :href => "samples.html" }
          Example Browser
        %a.codeExample{ :href => "#" }
          View source code
      /
        End_Exclude
