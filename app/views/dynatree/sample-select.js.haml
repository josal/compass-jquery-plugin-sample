!!! Strict
%html
  %head
    %meta{ :content => "text/html; charset=ISO-8859-1", "http-equiv" => "content-type" }
      %title
        Dynatree - Example
      %script{ :src => "../lib/jquery/jquery.js", :type => "text/javascript" }
      %script{ :src => "../lib/jquery/ui.core.js", :type => "text/javascript" }
      %script{ :src => "../lib/jquery/jquery.cookie.js", :type => "text/javascript" }
      %link{ :href => "../src/skin/ui.dynatree.css", :rel => "stylesheet", :type => "text/css" }
        %script{ :src => "../src/jquery.dynatree.js", :type => "text/javascript" }
        /
          Start_Exclude: This block is not part of the sample code
        %link{ :href => "prettify.css", :rel => "stylesheet" }
          %script{ :src => "prettify.js", :type => "text/javascript" }
          %link{ :href => "sample.css", :rel => "stylesheet", :type => "text/css" }
            %script{ :src => "sample.js", :type => "text/javascript" }
            /
              End_Exclude
            %script{ :type => "text/javascript" }
              var treeData = [
              {title: "item1 with key and tooltip", tooltip: "Look, a tool tip!" },
              {title: "item2: selected on init", select: true },
              {title: "Folder", isFolder: true, key: "id3",
              children: [
              {title: "Sub-item 3.1",
              children: [
              {title: "Sub-item 3.1.1", key: "id3.1.1" },
              {title: "Sub-item 3.1.2", key: "id3.1.2" }
              ]
              },
              {title: "Sub-item 3.2",
              children: [
              {title: "Sub-item 3.2.1", key: "id3.2.1" },
              {title: "Sub-item 3.2.2", key: "id3.2.2" }
              ]
              }
              ]
              },
              {title: "Documnent with some children (expanded on init)", key: "id4", expand: true,
              children: [
              {title: "Sub-item 4.1 (active on init)", activate: true,
              children: [
              {title: "Sub-item 4.1.1", key: "id4.1.1" },
              {title: "Sub-item 4.1.2", key: "id4.1.2" }
              ]
              },
              {title: "Sub-item 4.2 (selected on init)", select: true,
              children: [
              {title: "Sub-item 4.2.1", key: "id4.2.1" },
              {title: "Sub-item 4.2.2", key: "id4.2.2" }
              ]
              },
              {title: "Sub-item 4.3 (hideCheckbox)", hideCheckbox: true },
              {title: "Sub-item 4.4 (unselectable)", unselectable: true }
              ]
              }
              ];
              $(function(){
              
              \// --- Initialize sample trees
              $("#tree1").dynatree({
              checkbox: true,
              \// Override class name for checkbox icon:
              classNames: {checkbox: "ui-dynatree-radio"},
              selectMode: 1,
              children: treeData,
              onActivate: function(dtnode) {
              $("#echoActive1").text(dtnode.data.title);
              },
              onSelect: function(select, dtnode) {
              \// Display list of selected nodes
              var s = dtnode.tree.getSelectedNodes().join(", ");
              $("#echoSelection1").text(s);
              },
              onDblClick: function(dtnode, event) {
              dtnode.toggleSelect();
              },
              onKeydown: function(dtnode, event) {
              if( event.which == 32 ) {
              dtnode.toggleSelect();
              return false;
              }
              },
              \// The following options are only required, if we have more than one tree on one page:
              \//			initId: "treeData",
              cookieId: "ui-dynatree-Cb1",
              idPrefix: "ui-dynatree-Cb1-"
              });
              
              $("#tree2").dynatree({
              checkbox: true,
              selectMode: 2,
              children: treeData,
              onSelect: function(select, dtnode) {
              \// Display list of selected nodes
              var selNodes = dtnode.tree.getSelectedNodes();
              \// convert to title/key array
              var selKeys = $.map(selNodes, function(node){
              return "[" + node.data.key + "]: '" + node.data.title + "'";
              });
              $("#echoSelection2").text(selKeys.join(", "));
              },
              onClick: function(dtnode, event) {
              \// We should not toggle, if target was "checkbox", because this
              \// would result in double-toggle (i.e. no toggle)
              if( dtnode.getEventTargetType(event) == "title" )
              dtnode.toggleSelect();
              },
              onKeydown: function(dtnode, event) {
              if( event.which == 32 ) {
              dtnode.toggleSelect();
              return false;
              }
              },
              \// The following options are only required, if we have more than one tree on one page:
              cookieId: "ui-dynatree-Cb2",
              idPrefix: "ui-dynatree-Cb2-"
              });
              
              $("#tree3").dynatree({
              checkbox: true,
              selectMode: 3,
              children: treeData,
              onSelect: function(select, dtnode) {
              \// Get a list of all selected nodes, and convert to a key array:
              var selKeys = $.map(dtnode.tree.getSelectedNodes(), function(node){
              return node.data.key;
              });
              $("#echoSelection3").text(selKeys.join(", "));
              
              \// Get a list of all selected TOP nodes
              var selRootNodes = dtnode.tree.getSelectedNodes(true);
              \// ... and convert to a key array:
              var selRootKeys = $.map(selRootNodes, function(node){
              return node.data.key;
              });
              $("#echoSelectionRootKeys3").text(selRootKeys.join(", "));
              $("#echoSelectionRoots3").text(selRootNodes.join(", "));
              },
              onDblClick: function(dtnode, event) {
              dtnode.toggleSelect();
              },
              onKeydown: function(dtnode, event) {
              if( event.which == 32 ) {
              dtnode.toggleSelect();
              return false;
              }
              },
              \// The following options are only required, if we have more than one tree on one page:
              \//				initId: "treeData",
              cookieId: "ui-dynatree-Cb3",
              idPrefix: "ui-dynatree-Cb3-"
              });
              
              $("#tree4").dynatree({
              checkbox: false,
              selectMode: 2,
              children: treeData,
              onQuerySelect: function(select, dtnode) {
              if( dtnode.data.isFolder )
              return false;
              },
              onSelect: function(select, dtnode) {
              \// Display list of selected nodes
              var selNodes = dtnode.tree.getSelectedNodes();
              \// convert to title/key array
              var selKeys = $.map(selNodes, function(node){
              return "[" + node.data.key + "]: '" + node.data.title + "'";
              });
              $("#echoSelection4").text(selKeys.join(", "));
              },
              onClick: function(dtnode, event) {
              if( ! dtnode.data.isFolder )
              dtnode.toggleSelect();
              },
              onDblClick: function(dtnode, event) {
              dtnode.toggleExpand();
              },
              onKeydown: function(dtnode, event) {
              if( event.which == 32 ) {
              dtnode.toggleSelect();
              return false;
              }
              },
              \// The following options are only required, if we have more than one tree on one page:
              \//			initId: "treeData",
              cookieId: "ui-dynatree-Cb4",
              idPrefix: "ui-dynatree-Cb4-"
              });
              
              $("#btnToggleSelect").click(function(){
              $("#tree2").dynatree("getRoot").visit(function(dtnode){
              dtnode.toggleSelect();
              });
              return false;
              });
              $("#btnDeselectAll").click(function(){
              $("#tree2").dynatree("getRoot").visit(function(dtnode){
              dtnode.select(false);
              });
              return false;
              });
              $("#btnSelectAll").click(function(){
              $("#tree2").dynatree("getRoot").visit(function(dtnode){
              dtnode.select(true);
              });
              return false;
              });
              
              });
  %body.example
    %h1
      Example: Selection and checkbox
    /
      Tree #1
    %p.description
      This tree has
      %b
        checkoxes and selectMode 1 (single-selection)
      enabled.
      %br
        A double-click handler selects a
        %i
          document
        node (not folders).
        %br
          A keydown handler selects on [space].
          %br
            The
            %code
              checkbox
            class name was customized, to display radio
            buttons.
            %br
              Note: the initialization data contains multiple selected nodes. This is
              considered bad input data and
              %b
                not
              fixed automatically (only on
              the first click).
    #tree1
    %div
      Active node:
      %span#echoActive1
        \-
    %div
      Selection:
      %span#echoSelection1
        \-
    /
      Tree #2
    %p.description
      This tree has
      %b
        selectMode 2 (multi-selection)
      enabled.
      %br
        A single-click handler selects the node.
        %br
          A keydown handler selects on [space].
    %p
      %a#btnSelectAll{ :href => "#" }
        Select all
      \-
      %a#btnDeselectAll{ :href => "#" }
        Deselect all
      \-
      %a#btnToggleSelect{ :href => "#" }
        Toggle select
    #tree2
    %div
      Selected keys:
      %span#echoSelection2
        \-
    /
      Tree #3
    %p.description
      This tree has
      %b
        checkoxes and selectMode 3 (hierarchical multi-selection)
      enabled.
      %br
        A double-click handler selects the node.
        %br
          A keydown handler selects on [space].
    #tree3
    %div
      Selected keys:
      %span#echoSelection3
        \-
    %div
      Selected root keys:
      %span#echoSelectionRootKeys3
        \-
    %div
      Selected root nodes:
      %span#echoSelectionRoots3
        \-
    /
      Tree #4
    %p.description
      This tree has selectMode 2 (multi-selection) enabled, but
      %b
        no checkboxes
      \.
      %br
        A single-click handler selects the node.
        %br
          A keydown handler selects on [space].
          %br
            A double-click handler expands documents.
            %br
              A onQuerySelect handler prevents selection of folders.
    #tree4
    %div
      Selected keys:
      %span#echoSelection4
        \-
    /
      Start_Exclude: This block is not part of the sample code
    %hr
      %p.sample-links.no_code
        %a.hideInsideFS{ :href => "http://dynatree.googlecode.com" }
          jquery.dynatree.js project home
        %a.hideOutsideFS{ :href => "#" }
          Link to this page
        %a.hideInsideFS{ :href => "samples.html" }
          Example Browser
        %a.codeExample{ :href => "#" }
          View source code
      /
        End_Exclude
