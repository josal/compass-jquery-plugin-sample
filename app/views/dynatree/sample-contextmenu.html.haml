!!! Strict
%html
  %head
    %meta{ :content => "text/html; charset=ISO-8859-1", "http-equiv" => "content-type" }
      %title
        Dynatree - Example
      %script{ :src => "../lib/jquery/jquery.js", :type => "text/javascript" }
      %script{ :src => "../lib/jquery/ui.core.js", :type => "text/javascript" }
      %script{ :src => "../lib/jquery/jquery.cookie.js", :type => "text/javascript" }
      %link{ :href => "../src/skin/ui.dynatree.css", :rel => "stylesheet", :type => "text/css" }
        %script{ :src => "../src/jquery.dynatree.js", :type => "text/javascript" }
        /
          jquery.contextmenu,  A Beautiful Site (http://abeautifulsite.net/)
        %script{ :src => "contextmenu/jquery.contextMenu.js", :type => "text/javascript" }
        %link{ :href => "contextmenu/jquery.contextMenu.css", :rel => "stylesheet", :type => "text/css" }
          /
            Start_Exclude: This block is not part of the sample code
          %link{ :href => "prettify.css", :rel => "stylesheet" }
            %script{ :src => "prettify.js", :type => "text/javascript" }
            %link{ :href => "sample.css", :rel => "stylesheet", :type => "text/css" }
              %script{ :src => "sample.js", :type => "text/javascript" }
              /
                End_Exclude
              %script{ :type => "text/javascript" }
                \// --- Implement Cut/Copy/Paste --------------------------------------------
                var clipboardNode = null;
                var pasteMode = null;
                
                function copyPaste(action, dtnode) {
                switch( action ) {
                case "cut":
                case "copy":
                clipboardNode = dtnode;
                pasteMode = action;
                break;
                case "paste":
                if( !clipboardNode ) {
                alert("Clipoard is empty.");
                break;
                }
                if( pasteMode == "cut" ) {
                \// Cut mode: check for recursion and remove source
                var isRecursive = false;
                var cb = clipboardNode.toDict(true, function(dict){
                \// If one of the source nodes is the target, we must not move
                if( dict.key == dtnode.data.key )
                isRecursive = true;
                });
                if( isRecursive ) {
                alert("Cannot move a node to a sub node.");
                return;
                }
                dtnode.addChild(cb);
                clipboardNode.remove();
                } else {
                \// Copy mode: prevent duplicate keys:
                var cb = clipboardNode.toDict(true, function(dict){
                dict.title = "Copy of " + dict.title;
                delete dict.key; // Remove key, so a new one will be created
                });
                dtnode.addChild(cb);
                }
                clipboardNode = pasteMode = null;
                \// Must enable context menu for new nodes
                bindContextMenu();
                break;
                default:
                alert("Unhandled clipboard action '" + action + "'");
                }
                };
                
                \// --- Contextmenu helper --------------------------------------------------
                
                function bindContextMenu() {
                \// Add context menu to document nodes:
                $(".ui-dynatree-document,.ui-dynatree-folder")
                \.destroyContextMenu() // unbind first, to prevent duplicates
                \.contextMenu({menu: "myMenu"}, function(action, el, pos) {
                var dtnode = el.attr("dtnode");
                switch( action ) {
                case "cut":
                case "copy":
                case "paste":
                copyPaste(action, dtnode);
                break;
                default:
                alert("Todo: appply action '" + action + "' to node " + dtnode);
                }
                });
                };
                
                \// --- Init dynatree during startup ----------------------------------------
                
                $(function(){
                
                $("#tree").dynatree({
                persist: true,
                onActivate: function(dtnode) {
                $("#echoActivated").text(dtnode.data.title + ", key=" + dtnode.data.key);
                },
                onClick: function(dtnode, event) {
                \// Eat keyboard events, while a menu is open
                if( $(".contextMenu:visible").length > 0 )
                return false;
                },
                onKeydown: function(dtnode, event) {
                \// Eat keyboard events, when a menu is open
                if( $(".contextMenu:visible").length > 0 )
                return false;
                
                switch( event.which ) {
                
                \// Open context menu on [Space] key (simulate right click)
                case 32: // [Space]
                $(dtnode.span).trigger("mousedown", {
                preventDefault: true,
                button: 2
                })
                \.trigger("mouseup", {
                preventDefault: true,
                pageX: dtnode.span.offsetLeft,
                pageY: dtnode.span.offsetTop,
                button: 2
                });
                return false;
                
                \// Handle Ctrl-C, -X and -V
                case 67:
                if( event.ctrlKey ) { // Ctrl-C
                copyPaste("copy", dtnode);
                return false;
                }
                break;
                case 86:
                if( event.ctrlKey ) { // Ctrl-V
                copyPaste("paste", dtnode);
                return false;
                }
                break;
                case 88:
                if( event.ctrlKey ) { // Ctrl-X
                copyPaste("cut", dtnode);
                return false;
                }
                break;
                }
                }
                });
                \// Add context menu handler to tree nodes
                bindContextMenu();
                });
  %body.example
    %h1
      Example: Context Menu
    %p.description
      Implementation of a context menu. Right-click a node and see what happens.
      %br
        Also [space] key is supported to open the menu.
        %br
          %br
            This example also demonstrates, how to copy or move branches and how
            to implement clipboard functionality.
            %br
              A keyboard handler implements Cut, Copy, and Paste with
              %code
                Ctrl-X
              ,
              %code
                Ctrl-C
              ,
              %code
                Ctrl-V
              \.
    %p.description
      This sample uses the jQuery Context Menu Plugin by Cory S.N. LaViska.
      %br
        Visit
        %a{ :href => "http://abeautifulsite.net/" }
          A Beautiful Site
        for usage and more information.
    /
      Definition of context menu
    %ul#myMenu.contextMenu
      %li.edit
        %a{ :href => "#edit" }
          Edit
      %li.cut.separator
        %a{ :href => "#cut" }
          Cut
      %li.copy
        %a{ :href => "#copy" }
          Copy
      %li.paste
        %a{ :href => "#paste" }
          Paste
      %li.delete
        %a{ :href => "#delete" }
          Delete
      %li.quit.separator
        %a{ :href => "#quit" }
          Quit
    /
      Definition tree structure
    #tree
      %ul
        %li#id1{ :title => "Look, a tool tip!" }
          item1 with key and tooltip
          %li#id2.activate
            item2: activated on init
            %li#id3.folder
              Folder with some children
              %ul
                %li#id3.1
                  Sub-item 3.1
                  %li#id3.2
                    Sub-item 3.2
              %li#id4.expanded
                Document with some children (expanded on init)
                %ul
                  %li#id4.1
                    Sub-item 4.1
                    %li#id4.2
                      Sub-item 4.2
                %li#id5.lazy.folder
                  Lazy folder
    %div
      Selected node:
      %span#echoActivated
        \-
    /
      Start_Exclude: This block is not part of the sample code
    %hr
      %p.sample-links.no_code
        %a.hideInsideFS{ :href => "http://dynatree.googlecode.com" }
          jquery.dynatree.js project home
        %a.hideOutsideFS{ :href => "#" }
          Link to this page
        %a.hideInsideFS{ :href => "samples.html" }
          Example Browser
        %a.codeExample{ :href => "#" }
          View source code
      /
        End_Exclude
