!!! Strict
%html
  %head
    %meta{ :content => "text/html; charset=ISO-8859-1", "http-equiv" => "content-type" }
      %title
        Dynatree - Example
      %script{ :src => "../lib/jquery/jquery.js", :type => "text/javascript" }
      %script{ :src => "../lib/jquery/ui.core.js", :type => "text/javascript" }
      %script{ :src => "../lib/jquery/jquery.cookie.js", :type => "text/javascript" }
      %link{ :href => "../src/skin/ui.dynatree.css", :rel => "stylesheet", :type => "text/css" }
        %script{ :src => "../src/jquery.dynatree.js", :type => "text/javascript" }
        /
          Start_Exclude: This block is not part of the sample code
        %link{ :href => "prettify.css", :rel => "stylesheet" }
          %script{ :src => "prettify.js", :type => "text/javascript" }
          %link{ :href => "sample.css", :rel => "stylesheet", :type => "text/css" }
            %script{ :src => "sample.js", :type => "text/javascript" }
            /
              End_Exclude
            %script{ :type => "text/javascript" }
              $(function(){
              
              \// --- Initialize sample trees
              $("#tree").dynatree({
              title: "Lazy loading sample",
              rootVisible: true,
              fx: { height: "toggle", duration: 200 },
              \// In real life we would call a URL on the server like this:
              \//          initAjax: {
              \//              url: "/getTopLevelNodesAsJson",
              \//              data: { mode: "funnyMode" }
              \//              },
              \// .. but here we use a local file instead:
              initAjax: {
              url: "sample-data1.json"
              },
              
              onActivate: function(dtnode) {
              $("#echoActive").text(dtnode.data.title);
              },
              
              onLazyRead: function(dtnode){
              \// In real life we would call something like this:
              \//            	dtnode.appendAjax({
              \//            	    url: "/getChildrenAsJson",
              \//		            data: {key: dtnode.data.key,
              \//            		       mode: "funnyMode"
              \//                         }
              \//              });
              \// .. but here we use a local file instead:
              dtnode.appendAjax({
              url: "sample-data2.json"
              });
              }
              
              });
              
              });
  %body.example
    %h1
      Example: Lazy loading
    %p.description
      Using 'lazy' option to load the tree and to load the branches.
      %br
        %br
          Note: the AJAX call is only simulated. Also, the
          %code
            initAjax
          option is not used.
          %br
            You may want to try this
            %a{ :href => "sample-lazy-persist.html" }
              live example
            of a lazy tree that uses a simple test server.
    #tree
      /
        When using initAjax, it may be nice to put a throbber here, that spins until the initial content is loaded:
    %div
      Active node:
      %span#echoActive
        \-
    /
      Start_Exclude: This block is not part of the sample code
    %hr
      %p.sample-links.no_code
        %a.hideInsideFS{ :href => "http://dynatree.googlecode.com" }
          jquery.dynatree.js project home
        %a.hideOutsideFS{ :href => "#" }
          Link to this page
        %a.hideInsideFS{ :href => "samples.html" }
          Example Browser
        %a.codeExample{ :href => "#" }
          View source code
      /
        End_Exclude
