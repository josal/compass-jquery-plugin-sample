!!! Strict
%html
  %head
    %meta{:content => "text/html; charset=ISO-8859-1", "http-equiv" => "content-type"}
      %title Dynatree - Example
      %script{:src => "../lib/jquery/jquery-1.4.2.min.js", :type => "text/javascript"}
      %script{:src => "../lib/jquery/jquery-ui-1.8.2.min.js", :type => "text/javascript"}
      %script{:src => "../lib/jquery/jquery.cookie.js", :type => "text/javascript"}
      %link{:href => "../src/skin/ui.dynatree.css", :rel => "stylesheet", :type => "text/css"}
        %script{:src => "../src/jquery.dynatree.js", :type => "text/javascript"}
        :css
          #draggableSample, #droppableSample {
              height:100px;
              padding:0.5em;
              width:150px;
              border:1px solid #AAAAAA;
          }
          #draggableSample {
              background-color: silver;
              color:#222222;
          }
          #droppableSample {
              background-color: maroon;
              color: white;
          }
          #droppableSample.drophover {
              border: 1px solid green;
          }
            / Start_Exclude: This block is not part of the sample code
        %link{:href => "prettify.css", :rel => "stylesheet"}
          %script{:src => "prettify.js", :type => "text/javascript"}
          %link{:href => "sample.css", :rel => "stylesheet", :type => "text/css"}
            %script{:src => "sample.js", :type => "text/javascript"}
            / End_Exclude
            :javascript
              $(function(){
              	// --- Initialize first Dynatree -------------------------------------------
                  $("#tree").dynatree({
              		initAjax: { 
                  	    url: "sample-data3.json" 
              		},
                      onActivate: function(dtnode) {
                          $("#echoActive").text(dtnode.data.title + "(" + dtnode.data.key + ")");
                      },
                      onDeactivate: function(dtnode) {
                          $("#echoActive").text("-");
                      },
                      dnd: {
                          onDragStart: function(dtnode) {
                              /** This function MUST be defined to enable dragging for the tree.
                               *  Return false to cancel dragging of dtnode.
                               */ 
                              logMsg("tree.onDragStart(%o)", dtnode);
                              if(dtnode.data.isFolder)
                                  return false;
                              return true;
                          },
                          onDragStop: function(dtnode) {
                              logMsg("tree.onDragStop(%o)", dtnode);
                          }
                      }
                  });
                  // --- Initialize second Dynatree ------------------------------------------
                  $("#tree2").dynatree({
              		initAjax: { 
              	        url: "sample-data3.json" 
              		},
                      onActivate: function(dtnode) {
                          $("#echoActive2").text(dtnode.data.title + "(" + dtnode.data.key + ")");
                      },
                      onDeactivate: function(dtnode) {
                          $("#echoActive2").text("-");
                      },
                      dnd: {
                          autoExpandMS: 1000,
                          onDragEnter: function(node, sourceNode) {
                              /** sourceNode may be null for non-dynatree droppables. 
                               *  Return false to disallow dropping on node. In this case 
                               *  onDragOver and onDragLeave are not called.
                               *  Return 'over', 'before, or 'after' to force a hitMode.
                               *  Any other return value will calc the hitMode from the cursor position.
                               */
                              logMsg("tree.onDragEnter(%o, %o)", node, sourceNode);
                              if(node.data.isFolder)
                                  return false;
              //                return "over";
                          },
                          onDragOver: function(node, sourceNode, hitMode) {
                              /** Return false to disallow dropping this node.
                               *
                               */
                              logMsg("tree.onDragOver(%o, %o, %o)", node, sourceNode, hitMode);
                          },
                          onDrop: function(node, sourceNode, hitMode) {
                              /** This function MUST be defined to enable dropping of items on the tree. 
                               */
                              logMsg("tree.onDrop(%o, %o)", node, sourceNode);
                              var copynode;
                              if(sourceNode) {
                                  copynode = sourceNode.toDict(true, function(dict){
                                      dict.title = "Copy of " + dict.title;
                                      delete dict.key; // Remove key, so a new one will be created
                                  });
                              }else{
                                  copynode = {title: "This node was dropped here."};
                              }
                              node.addChild(copynode);
                          },
                          onDragLeave: function(node, sourceNode) {
                              /** Always called if onDragEnter was called. 
                               */
                              logMsg("tree.onDragLeave(%o, %o)", node, sourceNode);
                          }
                      }
                  });
                  // --- Initialize simple draggable sample ----------------------------------
                  $("#draggableSample").draggable({
                      revert: true,
                      connectToDynatree: true,
                      cursorAt: { top: -5, left:-5 },
                      helper: "clone"
                  });
                  // --- Initialize simple droppable sample ----------------------------------
                  $("#droppableSample").droppable({
                      hoverClass: "drophover",
                      addClasses: true,
                      over: function(event, ui) {
                          logMsg("droppable.over, %o, %o", event, ui);
                      },
                      drop: function(event, ui) {
                          $(this).addClass('ui-state-highlight').find('p').html('Dropped!');
                          alert("dropped");
                      }
                  });
              });
  %body.example
    %h1 Example: Standard jQuery drag-and-drop
    %p.description
      This sample uses the standard jQuery draggable and droppable.
    %table
      %thead
        %tr
          %th
            %p This tree allows dragging.
          %th
            %p This tree allows dropping.
      %tbody
        %tr{:valign => "top"}
          %td
            #tree           %td
            #tree2
        %tr
          %td
            %div
              Active node:
              %span#echoActive -
          %td
            %div
              Active node:
              %span#echoActive2 -
        %tr
          %td
            #draggableSample.ui-widget-content
              %p Drag me around
          %td
            #droppableSample.ui-widget-content
              %p Drop something here
    / Start_Exclude: This block is not part of the sample code
    %hr
      %p.sample-links.no_code
        %a.hideInsideFS{:href => "http://dynatree.googlecode.com"} jquery.dynatree.js project home
        %a.hideOutsideFS{:href => "#"} Link to this page
        %a.hideInsideFS{:href => "samples.html"} Example Browser
        %a.codeExample{:href => "#"} View source code
      / End_Exclude
