<!doctype html>
%html{ :lang => "en" }
  %head
    %title
      jQuery UI Sortable - Connect lists
    %link{ :href => "../../themes/base/ui.all.css", :rel => "stylesheet", :type => "text/css" }
    %script{ :type => "text/javascript", :src => "../../js/jquery-1.3.2.js" }
    %script{ :type => "text/javascript", :src => "../../ui/ui.core.js" }
    %script{ :type => "text/javascript", :src => "../../ui/ui.sortable.js" }
    %link{ :href => "../demos.css", :rel => "stylesheet", :type => "text/css" }
    %style{ :type => "text/css" }
      \#sortable1, #sortable2 { list-style-type: none; margin: 0; padding: 0; float: left; margin-right: 10px; }
      \#sortable1 li, #sortable2 li { margin: 0 5px 5px 5px; padding: 5px; font-size: 1.2em; width: 120px; }
    %script{ :type => "text/javascript" }
      $(function() {
      $("#sortable1, #sortable2").sortable({
      connectWith: '.connectedSortable'
      }).disableSelection();
      });
  %body
    .demo
      %ul#sortable1.connectedSortable
        %li.ui-state-default
          Item 1
        %li.ui-state-default
          Item 2
        %li.ui-state-default
          Item 3
        %li.ui-state-default
          Item 4
        %li.ui-state-default
          Item 5
      %ul#sortable2.connectedSortable
        %li.ui-state-highlight
          Item 1
        %li.ui-state-highlight
          Item 2
        %li.ui-state-highlight
          Item 3
        %li.ui-state-highlight
          Item 4
        %li.ui-state-highlight
          Item 5
    /
      End demo
    .demo-description
      %p
        Sort items from one list into another and vice versa, by passing a selector into
        the
        %code
          connectWith
        option. The simplest way to do this is to
        group all related lists with a CSS class, and then pass that class into the
        sortable function (i.e.,
        %code
          connectWith: '.myclass'
        ).
    /
      End demo-description
