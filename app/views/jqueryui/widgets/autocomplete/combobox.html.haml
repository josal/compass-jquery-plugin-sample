-@title = "#{t('txt.ui.name')} #{t('txt.ui.widgets.autocomplete.default')} - #{t('txt.ui.widgets.autocomplete.combobox')}"

- content_for :content_head do
  = render(:partial => "combobox.js.haml", :format => :js)
      
.demo
  %h3
    =@title
  .ui-widget
    %label
      Your preferred programming language:
    %select
      %option{ :value => "a" }
        asp
      %option{ :value => "c" }
        c
      %option{ :value => "cpp" }
        c++
      %option{ :value => "cf" }
        coldfusion
      %option{ :value => "g" }
        groovy
      %option{ :value => "h" }
        haskell
      %option{ :value => "j" }
        java
      %option{ :value => "js" }
        javascript
      %option{ :value => "p1" }
        pearl
      %option{ :value => "p2" }
        php
      %option{ :value => "p3" }
        python
      %option{ :value => "r" }
        ruby
      %option{ :value => "s" }
        scala
/End demo

.demo-description
  %p
    A custom widget built by composition of Autocomplete and Button.
    You can either type something into the field to get filtered suggestions based on your input,
    or use the button to get the full list of selections.
  %p
    The input is read from an existing select-element for progressive enhancement,
    passed to Autocomplete with a customized source-option.
/End demo-description
