%div{"data-role" => "page"}
  %div{"data-role" => "header"}
    %h1 .queue()
  #queue1{"data-role" => "content", "data-theme" => "c"}
    %h2.jq-clearfix.roundTop.section-title
      %span.name .queue( [ queueName ] )
      %span.returns
        Returns:
        %a.return{:href => "http://docs.jquery.com/Types#Array"} Array
    .entry-details
      %p.desc
        %strong> Description:
        Show the queue of functions to be executed on the matched elements.
      %ul.signatures
        %li#queue-queueName.signature
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.2/"} 1.2
            \.queue( [ queueName ] )
          %p.arguement
            %strong> queueName
            A string containing the name of the queue. Defaults to
            = succeed "," do
              %code fx
            the standard effects queue.
      %h3 Example:
      #entry-examples.entry-examples
        #example-0
          %h4
            %span.desc Show the length of the queue.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;div { margin:3px; width:40px; height:40px;
                        position:absolute; left:0px; top:30px; 
                        background:green; display:none; }
                  div.newcolor { background:blue; }
                  span { color:red; }  &lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;button id="show"&gt;Show Length of Queue&lt;/button&gt;
                  &lt;span&gt;&lt;/span&gt;
                  &lt;div&gt;&lt;/div&gt;
                &lt;script&gt;$("#show").click(function () {
                      var n = $("div").queue("fx");
                      $("span").text("Queue length is: " + n.length);
                    });
                    function runIt() {
                      $("div").show("slow");
                      $("div").animate({left:'+=200'},2000);
                      $("div").slideToggle(1000);
                      $("div").slideToggle("fast");
                      $("div").animate({left:'-=200'},1500);
                      $("div").hide("slow");
                      $("div").show(1200);
                      $("div").slideUp("normal", runIt);
                    }
                    runIt();&lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
  #queue2{"data-role" => "content", "data-theme" => "c"}
    %h2.jq-clearfix.roundTop.section-title
      %span.name .queue( [ queueName ], newQueue )
      %span.returns
        Returns:
        %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
    .entry-details
      %p.desc
        %strong> Description:
        Manipulate the queue of functions to be executed on the matched elements.
      %ul.signatures
        %li#queue-queueName-newQueue.signature
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.2/"} 1.2
            \.queue( [ queueName ], newQueue )
          %p.arguement
            %strong> queueName
            A string containing the name of the queue. Defaults to
            = succeed "," do
              %code fx
            the standard effects queue.
          %p.arguement
            %strong> newQueue
            An array of functions to replace the current queue contents.
        %li.signature{:id => "queue-queueName-callback next "}
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.2/"} 1.2
            \.queue( [ queueName ], callback( next ) )
          %p.arguement
            %strong> queueName
            A string containing the name of the queue. Defaults to
            = succeed "," do
              %code fx
            the standard effects queue.
          %p.arguement
            %strong> callback( next )
            The new function to add to the queue, with a function to call that will dequeue the next item.
      .longdesc
        %p
          Every element can have one to many queues of functions attached to it by jQuery. In most applications, only one queue (called
          = succeed ")" do
            %code fx
          is used. Queues allow a sequence of actions to be called on an element asynchronously, without halting program execution. The typical example of this is calling multiple animation methods on an element. For example:
        %pre $('#foo').slideUp().fadeIn();
        %p
          When this statement is executed, the element begins its sliding animation immediately, but the fading transition is placed on the
          %code fx
          queue to be called only once the sliding transition is complete.
        %p
          The
          %code .queue()
          method allows us to directly manipulate this queue of functions. Calling
          %code .queue()
          with a callback is particularly useful; it allows us to place a new function at the end of the queue.
        %p This feature is similar to providing a callback function with an animation method, but does not require the callback to be given at the time the animation is performed.
        %pre
          :preserve
            $('#foo').slideUp();
            $('#foo').queue(function() {
              alert('Animation complete.');
              $(this).dequeue();
            });        %p This is equivalent to:
        %pre
          :preserve
            $('#foo').slideUp(function() {
              alert('Animation complete.');
            });        %p
          Note that when adding a function with
          = succeed "," do
            %code .queue()
          we should ensure that
          %code .dequeue()
          is eventually called so that the next function in line executes.
        %p In jQuery 1.4 the function that's called is passed in another function, as the first argument, that when called automatically dequeues the next item and keeps the queue moving. You would use it like so:
        %pre
          :preserve
            $("#test").queue(function(next) {
                // Do some stuff...
                next();
            });      %h3 Examples:
      #entry-examples.entry-examples
        #example-0
          %h4
            Example:
            %span.desc Queue a custom function.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;
                  div { margin:3px; width:40px; height:40px;
                        position:absolute; left:0px; top:30px; 
                        background:green; display:none; }
                  div.newcolor { background:blue; }
                  &lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	Click here...
                  &lt;div&gt;&lt;/div&gt;
                &lt;script&gt;$(document.body).click(function () {
                      $("div").show("slow");
                      $("div").animate({left:'+=200'},2000);
                      $("div").queue(function () {
                        $(this).addClass("newcolor");
                        $(this).dequeue();
                      });
                      $("div").animate({left:'-=200'},500);
                      $("div").queue(function () {
                        $(this).removeClass("newcolor");
                        $(this).dequeue();
                      });
                      $("div").slideUp();
                    });&lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
        #example-1
          %h4
            Example:
            %span.desc Set a queue array to delete the queue.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;
                  div { margin:3px; width:40px; height:40px;
                        position:absolute; left:0px; top:30px; 
                        background:green; display:none; }
                  div.newcolor { background:blue; }
                  &lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;button id="start"&gt;Start&lt;/button&gt;
                  &lt;button id="stop"&gt;Stop&lt;/button&gt;
                  &lt;div&gt;&lt;/div&gt;
                &lt;script&gt;$("#start").click(function () {
                      $("div").show("slow");
                      $("div").animate({left:'+=200'},5000);
                      $("div").queue(function () {
                        $(this).addClass("newcolor");
                        $(this).dequeue();
                      });
                      $("div").animate({left:'-=200'},1500);
                      $("div").queue(function () {
                        $(this).removeClass("newcolor");
                        $(this).dequeue();
                      });
                      $("div").slideUp();
                    });
                    $("#stop").click(function () {
                      $("div").queue("fx", []);
                      $("div").stop();
                    });&lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
