%div{"data-role" => "page"}
  %div{"data-role" => "header"}
    %h1 .hover()
  #hover1{"data-role" => "content", "data-theme" => "c"}
    %h2.jq-clearfix.roundTop.section-title
      %span.name .hover( handlerIn(eventObject), handlerOut(eventObject) )
      %span.returns
        Returns:
        %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
    .entry-details
      %p.desc
        %strong> Description:
        Bind two handlers to the matched elements, to be executed when the mouse pointer enters and leaves the elements.
      %ul.signatures
        %li#hover-handlerIneventObject-handlerOuteventObject.signature
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.0/"} 1.0
            \.hover( handlerIn(eventObject), handlerOut(eventObject) )
          %p.arguement
            %strong> handlerIn(eventObject)
            A function to execute when the mouse pointer enters the element.
          %p.arguement
            %strong> handlerOut(eventObject)
            A function to execute when the mouse pointer leaves the element.
      .longdesc
        %p
          The
          %code .hover()
          method binds handlers for both
          %code mouseenter
          and
          %code mouseleave
          events. We can use it to simply apply behavior to an element during the time the mouse is within the element.
        %p
          Calling
          %code $(selector).hover(handlerIn, handlerOut)
          is shorthand for:
        %pre $(selector).mouseenter(handlerIn).mouseleave(handlerOut);
        %p
          See the discussions for
          %code
            %a{:href => "/mouseenter"} .mouseenter()
          and
          %code
            %a{:href => "/mouseleave"} .mouseleave()
          for more details.
      %h3 Examples:
      #entry-examples.entry-examples
        #example-0
          %h4
            Example:
            %span.desc To add a special style to list items that are being hovered over, try:
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;
                  ul { margin-left:20px; color:blue; }
                  li { cursor:default; }
                  span { color:red; }
                &lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;ul&gt;
                    &lt;li&gt;Milk&lt;/li&gt;
                    &lt;li&gt;Bread&lt;/li&gt;
                    &lt;li class='fade'&gt;Chips&lt;/li&gt;
                
                    &lt;li class='fade'&gt;Socks&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;script&gt;
                $("li").hover(
                  function () {
                    $(this).append($("&lt;span&gt; ***&lt;/span&gt;"));
                  }, 
                  function () {
                    $(this).find("span:last").remove();
                  }
                );
                
                
                
                //li with fade class
                $("li.fade").hover(function(){$(this).fadeOut(100);$(this).fadeIn(500);});
                
                &lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
        #example-1
          %h4
            Example:
            %span.desc To add a special style to table cells that are being hovered over, try:
          %pre
            %code.example
              :preserve
                $("td").hover(
                  function () {
                    $(this).addClass("hover");
                  },
                  function () {
                    $(this).removeClass("hover");
                  }
                );        #example-2
          %h4
            Example:
            %span.desc To unbind the above example use:
          %pre
            %code.example $("td").unbind('mouseenter mouseleave');
  #hover2{"data-role" => "content", "data-theme" => "c"}
    %h2.jq-clearfix.roundTop.section-title
      %span.name .hover( handlerInOut(eventObject) )
      %span.returns
        Returns:
        %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
    .entry-details
      %p.desc
        %strong> Description:
        Bind a single handler to the matched elements, to be executed when the mouse pointer enters or leaves the elements.
      %ul.signatures
        %li#hover-handlerInOuteventObject.signature
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.4/"} 1.4
            \.hover( handlerInOut(eventObject) )
          %p.arguement
            %strong> handlerInOut(eventObject)
            A function to execute when the mouse pointer enters or leaves the element.
      .longdesc
        %p
          The
          %code .hover()
          method, when passed a single function, will execute that handler for both
          %code mouseenter
          and
          %code mouseleave
          events.   This allows the user to use jQuery's various toggle methods within the handler.
        %p
          Calling
          %code $(selector).hover(handlerInOut)
          is shorthand for:
        %pre $(selector).bind("mouseenter mouseleave",handlerInOut);
        %p
          See the discussions for
          %code
            %a{:href => "/mouseenter"} .mouseenter()
          and
          %code
            %a{:href => "/mouseleave"} .mouseleave()
          for more details.
      %h3 Example:
      #entry-examples.entry-examples
        #example-0
          %h4
            %span.desc Slide the next sibling LI up or down on hover, and toggle a class.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;
                  ul { margin-left:20px; color:blue; }
                  li { cursor:default; }
                  li.active { background:black;color:white; }
                  span { color:red; }
                  &lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;ul&gt;
                    &lt;li&gt;Milk&lt;/li&gt;
                    &lt;li&gt;White&lt;/li&gt;
                    &lt;li&gt;Carrots&lt;/li&gt;
                    &lt;li&gt;Orange&lt;/li&gt;
                    &lt;li&gt;Broccoli&lt;/li&gt;
                    &lt;li&gt;Green&lt;/li&gt;
                  &lt;/ul&gt;
                &lt;script&gt;
                $("li")
                .filter(":odd")
                .hide()
                 .end()
                .filter(":even")
                .hover(
                  function () {
                    $(this).toggleClass("active")
                      .next().stop(true, true).slideToggle();
                  }
                );
                
                
                &lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
