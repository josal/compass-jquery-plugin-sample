%div{"data-role" => "page"}
  %div{"data-role" => "header"}
    %h1 .attr()
  #attr1{"data-role" => "content", "data-theme" => "c"}
    %h2.jq-clearfix.roundTop.section-title
      %span.name .attr( attributeName )
      %span.returns
        Returns:
        %a.return{:href => "http://docs.jquery.com/Types#String"} String
    .entry-details
      %p.desc
        %strong> Description:
        Get the value of an attribute for the first element in the set of matched elements.
      %ul.signatures
        %li#attr-attributeName.signature
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.0/"} 1.0
            \.attr( attributeName )
          %p.arguement
            %strong> attributeName
            The name of the attribute to get.
      .longdesc
        %p
          It's important to note that the
          %code .attr()
          method gets the attribute value for only the
          %em first
          element in the matched set. To get the value for each element individually, we need to rely on a looping construct such as jQuery's
          %code .each()
          method.
        %p
          Using jQuery's
          %code .attr()
          method to get the value of an element's attribute has two main benefits:
        %ol
          %li
            %strong> Convenience
            \: It can be called directly on a jQuery object and chained to other jQuery methods.
          %li
            %strong> Cross-browser consistency
            \: Some attributes have inconsistent naming from browser to browser. Furthermore, the values of some attributes are reported inconsistently across browsers, and even across versions of a single browser. The
            %code .attr()
            method reduces such inconsistencies.
      %h3 Example:
      #entry-examples.entry-examples
        #example-0
          %h4
            %span.desc Finds the title attribute of the first &lt;em&gt; in the page.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;em { color:blue; font-weight;bold; }
                  div { color:red; }&lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;p&gt;
                    Once there was a &lt;em title="huge, gigantic"&gt;large&lt;/em&gt; dinosaur...
                  &lt;/p&gt;
                
                  The title of the emphasis is:&lt;div&gt;&lt;/div&gt;
                &lt;script&gt;var title = $("em").attr("title");
                    $("div").text(title);
                &lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
  #attr2{"data-role" => "content", "data-theme" => "c"}
    %h2.jq-clearfix.roundTop.section-title
      %span.name .attr( attributeName, value )
      %span.returns
        Returns:
        %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
    .entry-details
      %p.desc
        %strong> Description:
        Set one or more attributes for the set of matched elements.
      %ul.signatures
        %li#attr-attributeName-value.signature
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.0/"} 1.0
            \.attr( attributeName, value )
          %p.arguement
            %strong> attributeName
            The name of the attribute to set.
          %p.arguement
            %strong> value
            A value to set for the attribute.
        %li#attr-map.signature
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.0/"} 1.0
            \.attr( map )
          %p.arguement
            %strong> map
            A map of attribute-value pairs to set.
        %li.signature{:id => "attr-attributeName-functionindex, attr"}
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.1/"} 1.1
            \.attr( attributeName, function(index, attr) )
          %p.arguement
            %strong> attributeName
            The name of the attribute to set.
          %p.arguement
            %strong> function(index, attr)
            A function returning the value to set.
            %code this
            is the current element. Receives the index position of the element in the set and the old attribute value as arguments.
      .longdesc
        %p
          The
          %code .attr()
          method is a convenient and powerful way to set the value of attributesâ€”especially when setting multiple attributes or using values returned by a function. Let's consider the following image:
        %pre &lt;img id="greatphoto" src="brush-seller.jpg" alt="brush seller" /&gt;
        %h4 Setting a simple attribute
        %p
          We can change the
          %code alt
          attribute by simply passing the name of the attribute and its new value to the
          %code .attr()
          method:
        %pre $('#greatphoto').attr('alt', 'Beijing Brush Seller');
        %p
          We can
          %em add
          an attribute the same way:
        %pre
          :preserve
            $('#greatphoto')
              .attr('title', 'Photo by Kelly Clark');        %h4 Setting several attributes at once
        %p
          To change the
          %code alt
          attribute and add the
          %code title
          attribute at the same time, we can pass both sets of names and values into the method at once using a map (JavaScript object literal). Each key-value pair in the map adds or modifies an attribute:
        %pre
          :preserve
            $('#greatphoto').attr({
              alt: 'Beijing Brush Seller',
              title: 'photo by Kelly Clark'
            });        %p When setting multiple attributes, the quotes around attribute names are optional.
        %p
          %strong WARNING
          When setting the 'class' attribute, you must always use quotes!
        %h4 Computed attribute values
        %p By using a function to set attributes, we can compute the value based on other properties of the element. For example, we could concatenate a new value with an existing value:
        %pre
          :preserve
            $('#greatphoto').attr('title', function() {
              return this.alt + ' - photo by Kelly Clark'
            });        %p This use of a function to compute attribute values can be particularly useful when we modify the attributes of multiple elements at once.
      %h3 Examples:
      #entry-examples.entry-examples
        #example-0
          %h4
            Example:
            %span.desc Set some attributes for all &lt;img&gt;s in the page.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;
                  img { padding:10px; }
                  div { color:red; font-size:24px; }&lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;img /&gt;
                  &lt;img /&gt;
                  &lt;img /&gt;
                
                  &lt;div&gt;&lt;B&gt;Attribute of Ajax&lt;/B&gt;&lt;/div&gt;
                &lt;script&gt;$("img").attr({ 
                          src: "/images/hat.gif",
                          title: "jQuery",
                          alt: "jQuery Logo"
                        });
                    $("div").text($("img").attr("alt"));&lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
        #example-1
          %h4
            Example:
            %span.desc Disables buttons greater than the 1st button.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;button { margin:10px; }
                  &lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;button&gt;0th Button&lt;/button&gt;
                  &lt;button&gt;1st Button&lt;/button&gt;
                  &lt;button&gt;2nd Button&lt;/button&gt;
                &lt;script&gt;$("button:gt(1)").attr("disabled","disabled");&lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
        #example-2
          %h4
            Example:
            %span.desc Sets id for divs based on the position in the page.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;
                  div { color:blue; }
                  span { color:red; }
                  b { font-weight:bolder; }
                  &lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;div&gt;Zero-th &lt;span&gt;&lt;/span&gt;&lt;/div&gt;
                  &lt;div&gt;First &lt;span&gt;&lt;/span&gt;&lt;/div&gt;
                  &lt;div&gt;Second &lt;span&gt;&lt;/span&gt;&lt;/div&gt;
                &lt;script&gt;$("div").attr("id", function (arr) {
                          return "div-id" + arr;
                        })
                        .each(function () {
                          $("span", this).html("(ID = '&lt;b&gt;" + this.id + "&lt;/b&gt;')");
                        });&lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
        #example-3
          %h4
            Example:
            %span.desc Sets src attribute from title attribute on the image.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;img title="hat.gif"/&gt;
                &lt;script&gt;$("img").attr("src", function() { 
                          return "/images/" + this.title; 
                        });
                &lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
