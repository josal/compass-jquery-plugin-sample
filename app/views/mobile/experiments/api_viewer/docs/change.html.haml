%div{"data-role" => "page"}
  %div{"data-role" => "header"}
    %h1 .change()
  #change1{"data-role" => "content", "data-theme" => "c"}
    %h2.jq-clearfix.roundTop.section-title
      %span.name .change( handler(eventObject) )
      %span.returns
        Returns:
        %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
    .entry-details
      %p.desc
        %strong> Description:
        Bind an event handler to the "change" JavaScript event, or trigger that event on an element.
      %ul.signatures
        %li#change-handlereventObject.signature
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.0/"} 1.0
            \.change( handler(eventObject) )
          %p.arguement
            %strong> handler(eventObject)
            A function to execute each time the event is triggered.
        %li#change.signature
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.0/"} 1.0
            \.change()
      .longdesc
        %p
          This method is a shortcut for
          %code .bind('change', handler)
          in the first variation, and
          %code .trigger('change')
          in the second.
        %p
          The
          %code change
          event is sent to an element when its value changes. This event is limited to
          %code &lt;input&gt;
          elements,
          %code &lt;textarea&gt;
          boxes and
          %code &lt;select&gt;
          elements. For select boxes, checkboxes, and radio buttons, the event is fired immediately when the user makes a selection with the mouse, but for the other element types the event is deferred until the element loses focus.
        %p For example, consider the HTML:
        %pre
          :preserve
            &lt;form&gt;
              &lt;input class="target" type="text" value="Field 1" /&gt;
              &lt;select class="target"&gt;
                &lt;option value="option1" selected="selected"&gt;Option 1&lt;/option&gt;
                &lt;option value="option2"&gt;Option 2&lt;/option&gt;
              &lt;/select&gt;
            &lt;/form&gt;
            &lt;div id="other"&gt;
              Trigger the handler
            &lt;/div&gt;        %p The event handler can be bound to the text input and the select box:
        %pre
          :preserve
            $('.target').change(function() {
              alert('Handler for .change() called.');
            });        %p Now when the second option is selected from the dropdown, the alert is displayed. It is also displayed if we change the text in the field and then click away. If the field loses focus without the contents having changed, though, the event is not triggered. We can trigger the event manually when another element is clicked:
        %pre
          :preserve
            $('#other').click(function() {
              $('.target').change();
            });        %p
          After this code executes, clicks on
          %span.output Trigger the handler
          will also alert the message. The message will be displayed twice, because the handler has been bound to the
          %code change
          event on both of the form elements.
        %p
          As of jQuery 1.4 the
          %code change
          event now bubbles, and works identically to all other browsers, in Internet Explorer.
      %h3 Examples:
      #entry-examples.entry-examples
        #example-0
          %h4
            Example:
            %span.desc Attaches a change event to the select that gets the text for each selected option and writes them in the div.  It then triggers the event for the initial text draw.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;
                
                  div { color:red; }
                  &lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;select name="sweets" multiple="multiple"&gt;
                    &lt;option&gt;Chocolate&lt;/option&gt;
                    &lt;option selected="selected"&gt;Candy&lt;/option&gt;
                
                    &lt;option&gt;Taffy&lt;/option&gt;
                    &lt;option selected="selected"&gt;Caramel&lt;/option&gt;
                    &lt;option&gt;Fudge&lt;/option&gt;
                    &lt;option&gt;Cookie&lt;/option&gt;
                
                  &lt;/select&gt;
                  &lt;div&gt;&lt;/div&gt;
                &lt;script&gt;
                    $("select").change(function () {
                          var str = "";
                          $("select option:selected").each(function () {
                                str += $(this).text() + " ";
                              });
                          $("div").text(str);
                        })
                        .change();
                &lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
        #example-1
          %h4
            Example:
            %span.desc To add a validity test to all text input elements:
          %pre
            %code.example
              :preserve
                $("input[type='text']").change( function() {
                  // check input ($(this).val()) for validity here
                });