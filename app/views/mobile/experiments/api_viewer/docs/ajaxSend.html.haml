%div{"data-role" => "page"}
  %div{"data-role" => "header"}
    %h1 .ajaxSend()
  #ajaxSend1{"data-role" => "content", "data-theme" => "c"}
    %h2.jq-clearfix.roundTop.section-title
      %span.name .ajaxSend( handler(event, XMLHttpRequest, ajaxOptions) )
      %span.returns
        Returns:
        %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
    .entry-details
      %p.desc
        %strong Description:
      %ul.signatures
        %li.signature{:id => "ajaxSend-handlerevent, XMLHttpRequest, ajaxOptions"}
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/category/version/1.0/"} 1.0
            \.ajaxSend( handler(event, XMLHttpRequest, ajaxOptions) )
          %p.arguement
            %strong> handler(event, XMLHttpRequest, ajaxOptions)
            The function to be invoked.
      .longdesc
        %p
          Whenever an Ajax request is about to be sent, jQuery triggers the
          %code ajaxSend
          event. Any and all handlers that have been registered with the
          %code .ajaxSend()
          method are executed at this time.
        %p To observe this method in action, we can set up a basic Ajax load request:
        %pre
          :preserve
            &lt;div class="trigger"&gt;Trigger&lt;/div&gt;
            &lt;div class="result"&gt;&lt;/div&gt;
            &lt;div class="log"&gt;&lt;/div&gt;        %p We can attach our event handler to any element:
        %pre
          :preserve
            $('.log').ajaxSend(function() {
              $(this).text('Triggered ajaxSend handler.');
            });        %p Now, we can make an Ajax request using any jQuery method:
        %pre
          :preserve
            $('.trigger').click(function() {
              $('.result').load('ajax/test.html');
            });        %p When the user clicks the button and the Ajax request is about to begin, the log message is displayed.
        %p
          %strong Note:
          Because
          %code .ajaxSend()
          is implemented as a method of jQuery instances, we can use the
          %code this
          keyword as we do here to refer to the selected elements within the callback function.
        %p
          All
          %code ajaxSend
          handlers are invoked, regardless of what Ajax request is to be sent. If we must differentiate between the requests, we can use the parameters passed to the handler. Each time an
          %code ajaxSend
          handler is executed, it is passed the event object, the
          %code XMLHttpRequest
          object, and the
          %a{:href => "http://api.jquery.com/jQuery.ajax/"} settings object
          that was used in the creation of the Ajax request. For example, we can restrict our callback to only handling events dealing with a particular URL:
        %pre
          :preserve
            $('.log').ajaxSend(function(e, xhr, settings) {
              if (settings.url == 'ajax/test.html') {
                $(this).text('Triggered ajaxSend handler.');
              }
            });      %h3 Example:
      #entry-examples.entry-examples
        #example-0
          %h4
            %span.desc Show a message before an Ajax request is sent.
          %pre
            %code.example
              :preserve
                $("#msg").ajaxSend(function(evt, request, settings){
                        $(this).append("&lt;li&gt;Starting request at " + settings.url + "&lt;/li&gt;");
                      });