%div{"data-role" => "page"}
  %div{"data-role" => "header"}
    %h1 Multiple Selector (“selector1, selector2, selectorN”)
    .entry-meta
      Categories:
      %span.category
        %a{:href => "http://api.jquery.com/category/selectors/", :title => "View all posts in Selectors"} Selectors
        \&gt;
        %a{:href => "http://api.jquery.com/category/selectors/basic-css-selectors/", :title => "View all posts in Basic"} Basic
  #multiple1{"data-role" => "content", "data-theme" => "c"}
    %h2.jq-clearfix.roundTop.section-title
      %span.name multiple
      selector
    .entry-details
      %h4.name
        %span.versionAdded>
          version added:
          %a{:href => "/version/1.0/"} 1.0
        jQuery('selector1, selector2, selectorN')
      %ul.signatures
        %li
          %dl.arguments
            %dt selector1
            %dd Any valid selector.
            %dt selector2
            %dd Another valid selector.
            %dt selectorN
            %dd As many more valid selectors as you like.
      %p.desc
        %strong> Description:
        Selects the combined results of all the specified selectors.
      .longdesc
        %p
          You can specify any number of selectors to combine into a single result.  This multiple expression combinator is an efficient way to select disparate elements. The order of the DOM elements in the returned jQuery object may not be identical, as they will be in document order. An alternative to this combinator is the .
          %a{:href => "/add"} add()
          method.
      %h3 Examples:
      #entry-examples.entry-examples
        #example-0
          %h4
            Example:
            %span.desc Finds the elements that match any of these three selectors.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;
                
                  div,span,p {
                    width: 126px;
                    height: 60px;
                    float:left;
                    padding: 3px;
                    margin: 2px;
                    background-color: #EEEEEE;
                    font-size:14px;
                  }
                  &lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;div&gt;div&lt;/div&gt;
                
                  &lt;p class="myClass"&gt;p class="myClass"&lt;/p&gt;
                  &lt;p class="notMyClass"&gt;p class="notMyClass"&lt;/p&gt;
                  &lt;span&gt;span&lt;/span&gt;
                &lt;script&gt;$("div,span,p.myClass").css("border","3px solid red");&lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
        #example-1
          %h4
            Example:
            %span.desc Show the order in the jQuery object.
          %pre
            %code.example.demo-code
              :preserve
                &lt;!DOCTYPE html&gt;
                &lt;html&gt;
                &lt;head&gt;
                  &lt;style&gt;
                  b { color:red; font-size:16px; display:block; clear:left; }
                  div,span,p { width: 40px; height: 40px; float:left;
                               margin: 10px; background-color: blue; 
                               padding:3px; color:white; 
                             }
                  &lt;/style&gt;
                  &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                &lt;/head&gt;
                &lt;body&gt;
                	&lt;span&gt;span&lt;/span&gt;
                
                  &lt;p&gt;p&lt;/p&gt;
                  &lt;p&gt;p&lt;/p&gt;
                  &lt;div&gt;div&lt;/div&gt;
                  &lt;span&gt;span&lt;/span&gt;
                
                  &lt;p&gt;p&lt;/p&gt;
                  &lt;div&gt;div&lt;/div&gt;
                  &lt;b&gt;&lt;/b&gt;
                &lt;script&gt;
                    var list = $("div,p,span").map(function () {
                      return this.tagName;
                    }).get().join(", ");
                    $("b").append(document.createTextNode(list));
                &lt;/script&gt;
                &lt;/body&gt;
                &lt;/html&gt;          %h4 Demo:
          .demo.code-demo
