!!!
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 jQuery.queue()
      %div{"data-role" => "content", "data-theme" => "c", :id => "jQuery.queue1"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name jQuery.queue( element, [ queueName ] )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#Array"} Array
        .entry-details
          %p.desc
            %strong> Description:
            Show the queue of functions to be executed on the matched element.
          %ul.signatures
            %li.signature{:id => "jQuery.queue-element-queueName"}
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.3/"} 1.3
                jQuery.queue( element, [ queueName ] )
              %p.arguement
                %strong> element
                A DOM element to inspect for an attached queue.
              %p.arguement
                %strong> queueName
                A string containing the name of the queue. Defaults to
                = succeed "," do
                  %code fx
                the standard effects queue.
          .longdesc
            %p
              %strong Note:
              This is a low-level method, you should probably use
              %code
                %a{:href => "/queue"} .queue()
              instead.
          %h3 Example:
          #entry-examples.entry-examples
            #example-0
              %h4
                %span.desc Show the length of the queue.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;div { margin:3px; width:40px; height:40px;
                            position:absolute; left:0px; top:30px; 
                            background:green; display:none; }
                      div.newcolor { background:blue; }
                      span { color:red; }  &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;button id="show"&gt;Show Length of Queue&lt;/button&gt;
                      &lt;span&gt;&lt;/span&gt;
                      &lt;div&gt;&lt;/div&gt;
                    &lt;script&gt;$("#show").click(function () {
                          var n = jQuery.queue( $("div")[0], "fx" );
                          $("span").text("Queue length is: " + n.length);
                        });
                        function runIt() {
                          $("div").show("slow");
                          $("div").animate({left:'+=200'},2000);
                          $("div").slideToggle(1000);
                          $("div").slideToggle("fast");
                          $("div").animate({left:'-=200'},1500);
                          $("div").hide("slow");
                          $("div").show(1200);
                          $("div").slideUp("normal", runIt);
                        }
                        runIt();&lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
      %div{"data-role" => "content", "data-theme" => "c", :id => "jQuery.queue2"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name jQuery.queue( element, queueName, newQueue )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
        .entry-details
          %p.desc
            %strong> Description:
            Manipulate the queue of functions to be executed on the matched element.
          %ul.signatures
            %li.signature{:id => "jQuery.queue-element-queueName-newQueue"}
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.3/"} 1.3
                jQuery.queue( element, queueName, newQueue )
              %p.arguement
                %strong> element
                A DOM element where the array of queued functions is attached.
              %p.arguement
                %strong> queueName
                A string containing the name of the queue. Defaults to
                = succeed "," do
                  %code fx
                the standard effects queue.
              %p.arguement
                %strong> newQueue
                An array of functions to replace the current queue contents.
            %li.signature{:id => "jQuery.queue-element-queueName-callback"}
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.3/"} 1.3
                jQuery.queue( element, queueName, callback() )
              %p.arguement
                %strong> element
                A DOM element on which to add a queued function.
              %p.arguement
                %strong> queueName
                A string containing the name of the queue. Defaults to
                = succeed "," do
                  %code fx
                the standard effects queue.
              %p.arguement
                %strong> callback()
                The new function to add to the queue.
          .longdesc
            %p
              %strong Note:
              This is a low-level method, you should probably use
              %code
                %a{:href => "/queue"} .queue()
              instead.
            %p
              Every element can have one or more queues of functions attached to it by jQuery. In most applications, only one queue (called
              = succeed ")" do
                %code fx
              is used. Queues allow a sequence of actions to be called on an element asynchronously, without halting program execution.
            %p
              The
              %code jQuery.queue()
              method allows us to directly manipulate this queue of functions. Calling
              %code jQuery.queue()
              with a callback is particularly useful; it allows us to place a new function at the end of the queue.
            %p
              Note that when adding a function with
              = succeed "," do
                %code jQuery.queue()
              we should ensure that
              %code jQuery.dequeue()
              is eventually called so that the next function in line executes.
          %h3 Examples:
          #entry-examples.entry-examples
            #example-0
              %h4
                Example:
                %span.desc Queue a custom function.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      div { margin:3px; width:40px; height:40px;
                            position:absolute; left:0px; top:30px; 
                            background:green; display:none; }
                      div.newcolor { background:blue; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	Click here...
                      &lt;div&gt;&lt;/div&gt;
                    &lt;script&gt;
                       $(document.body).click(function () {
                          $("div").show("slow");
                          $("div").animate({left:'+=200'},2000);
                          jQuery.queue( $("div")[0], "fx", function () {
                            $(this).addClass("newcolor");
                            jQuery.dequeue( this );
                          });
                          $("div").animate({left:'-=200'},500);
                          jQuery.queue( $("div")[0], "fx", function () {
                            $(this).removeClass("newcolor");
                            jQuery.dequeue( this );
                          });
                          $("div").slideUp();
                        });&lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
            #example-1
              %h4
                Example:
                %span.desc Set a queue array to delete the queue.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      div { margin:3px; width:40px; height:40px;
                            position:absolute; left:0px; top:30px; 
                            background:green; display:none; }
                      div.newcolor { background:blue; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	
                      &lt;button id="start"&gt;Start&lt;/button&gt;
                      &lt;button id="stop"&gt;Stop&lt;/button&gt;
                      &lt;div&gt;&lt;/div&gt;
                    &lt;script&gt;
                       $("#start").click(function () {
                          $("div").show("slow");
                          $("div").animate({left:'+=200'},5000);
                          jQuery.queue( $("div")[0], "fx", function () {
                            $(this).addClass("newcolor");
                            jQuery.dequeue( this );
                          });
                          $("div").animate({left:'-=200'},1500);
                          jQuery.queue( $("div")[0], "fx", function () {
                            $(this).removeClass("newcolor");
                            jQuery.dequeue( this );
                          });
                          $("div").slideUp();
                        });
                        $("#stop").click(function () {
                          jQuery.queue( $("div")[0], "fx", [] );
                          $("div").stop();
                        });
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
