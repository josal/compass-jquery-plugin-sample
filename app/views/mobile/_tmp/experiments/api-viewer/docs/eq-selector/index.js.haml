!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 :eq() Selector
      #eq1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name eq
          selector
        .entry-details
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/version/1.0/"} 1.0
            jQuery(':eq(index)')
          %ul.signatures
            %li
              %dl.arguments
                %dt index
                %dd Zero-based index of the element to match.
          %p.desc
            %strong> Description:
            Select the element at index n within the matched set.
          .longdesc
            %p
              The index-related selectors (
              %code> :eq()
              ,
              = succeed "," do
                %code :lt()
              = succeed "," do
                %code :gt()
              = succeed "," do
                %code :even
              = succeed ")" do
                %code :odd
              filter the set of elements that have matched the expressions that precede them. They narrow the set down based on the order of the elements within this matched set. For example, if elements are first selected with a class selector (
              %code> .myclass
              ) and four elements are returned, these elements are given indices
              %code 0
              through
              %code 3
              for the purposes of these selectors.
            %p
              Note that since JavaScript arrays use
              = succeed "," do
                %em 0-based indexing
              these selectors reflect that fact. This is why
              %code $('.myclass:eq(1)')
              selects the second element in the document with the class myclass, rather than the first. In contrast,
              %code :nth-child(n)
              uses
              %em 1-based indexing
              to conform to the CSS specification.
          %h3 Example:
          #entry-examples.entry-examples
            #example-0
              %h4
                %span.desc Finds the third td.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;table border="1"&gt;
                      &lt;tr&gt;&lt;td&gt;TD #0&lt;/td&gt;&lt;td&gt;TD #1&lt;/td&gt;&lt;td&gt;TD #2&lt;/td&gt;&lt;/tr&gt;
                      &lt;tr&gt;&lt;td&gt;TD #3&lt;/td&gt;&lt;td&gt;TD #4&lt;/td&gt;&lt;td&gt;TD #5&lt;/td&gt;&lt;/tr&gt;
                      &lt;tr&gt;&lt;td&gt;TD #6&lt;/td&gt;&lt;td&gt;TD #7&lt;/td&gt;&lt;td&gt;TD #8&lt;/td&gt;&lt;/tr&gt;
                    &lt;/table&gt;
                    &lt;script&gt;$("td:eq(2)").css("color", "red");&lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
