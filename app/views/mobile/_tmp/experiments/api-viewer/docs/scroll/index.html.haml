!!!
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 .scroll()
      #scroll1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name .scroll( handler(eventObject) )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
        .entry-details
          %p.desc
            %strong> Description:
            Bind an event handler to the "scroll" JavaScript event, or trigger that event on an element.
          %ul.signatures
            %li#scroll-handlereventObject.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.0/"} 1.0
                \.scroll( handler(eventObject) )
              %p.arguement
                %strong> handler(eventObject)
                A function to execute each time the event is triggered.
            %li#scroll.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.0/"} 1.0
                \.scroll()
          .longdesc
            %p
              This method is a shortcut for
              %code .bind('scroll', handler)
              in the first variation, and
              %code .trigger('scroll')
              in the second.
            %p
              The
              %code scroll
              event is sent to an element when the user scrolls to a different place in the element. It applies to
              %code window
              objects, but also to scrollable frames and elements with the
              = succeed "CSS" do
                %code overflow
              property set to
              %code scroll
              (or
              %code auto
              when the element's explicit height is less than the height of its contents).
            %p For example, consider the HTML:
            %pre
              :preserve
                &lt;div id="target" style="overflow: scroll; width: 200px; height: 100px;"&gt;
                  Lorem ipsum dolor sit amet, consectetur adipisicing elit,
                  sed do eiusmod tempor incididunt ut labore et dolore magna
                  aliqua. Ut enim ad minim veniam, quis nostrud exercitation
                  ullamco laboris nisi ut aliquip ex ea commodo consequat.
                  Duis aute irure dolor in reprehenderit in voluptate velit
                  esse cillum dolore eu fugiat nulla pariatur. Excepteur
                  sint occaecat cupidatat non proident, sunt in culpa qui
                  officia deserunt mollit anim id est laborum.
                &lt;/div&gt;
                &lt;div id="other"&gt;
                  Trigger the handler
                &lt;/div&gt;
                &lt;div id="log"&gt;&lt;/div&gt;            %p The style definition is present to make the target element small enough to be scrollable:
            %p.image
              %img{:alt => "", :src => "http://api.jquery.com/images/0042_05_11.png"}/
            %p
              The
              %code scroll
              event handler can be bound to this element:
            %pre
              :preserve
                $('#target').scroll(function() {
                  $('#log').append('&lt;div&gt;Handler for .scroll() called.&lt;/div&gt;');
                });            %p
              Now when the user scrolls the text up or down, one or more messages are appended to
              = succeed ":" do
                %code &lt;div id="log"&gt;&lt;/div&gt;
            %p
              %span.output Handler for .scroll() called.
            %p We can trigger the event manually when another element is clicked:
            %pre
              :preserve
                $('#other').click(function() {
                  $('#target').scroll();
                });            %p
              After this code executes, clicks on
              %span.output Trigger the handler
              will also append the message.
            %p
              A
              %code scroll
              event is sent whenever the element's scroll position changes, regardless of the cause. A mouse click or drag on the scroll bar, dragging inside the element, pressing the arrow keys, or using the mouse's scroll wheel could cause this event.
          %h3 Example:
          #entry-examples.entry-examples
            #example-0
              %h4
                %span.desc To do something when your page is scrolled:
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      div { color:blue; }
                      p { color:green; }
                      span { color:red; display:none; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;div&gt;Try scrolling the iframe.&lt;/div&gt;
                      &lt;p&gt;Paragraph - &lt;span&gt;Scroll happened!&lt;/span&gt;&lt;/p&gt;
                    &lt;script&gt;
                        $("p").clone().appendTo(document.body);
                        $("p").clone().appendTo(document.body);
                        $("p").clone().appendTo(document.body);
                        $(window).scroll(function () { 
                          $("span").css("display", "inline").fadeOut("slow"); 
                        });
                    
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
