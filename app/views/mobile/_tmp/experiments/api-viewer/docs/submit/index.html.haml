!!!
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 .submit()
      #submit1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name .submit( handler(eventObject) )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
        .entry-details
          %p.desc
            %strong> Description:
            Bind an event handler to the "submit" JavaScript event, or trigger that event on an element.
          %ul.signatures
            %li#submit-handlereventObject.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.0/"} 1.0
                \.submit( handler(eventObject) )
              %p.arguement
                %strong> handler(eventObject)
                A function to execute each time the event is triggered.
            %li#submit.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.0/"} 1.0
                \.submit()
          .longdesc
            %p
              This method is a shortcut for
              %code .bind('submit', handler)
              in the first variation, and
              %code .trigger('submit')
              in the second.
            %p
              The
              %code submit
              event is sent to an element when the user is attempting to submit a form. It can only be attached to
              %code &lt;form&gt;
              elements. Forms can be submitted either by clicking an explicit
              = succeed "," do
                %code &lt;input type="submit"&gt;
              = succeed "," do
                %code &lt;input type="image"&gt;
              or
              = succeed "," do
                %code &lt;button type="submit"&gt;
              or by pressing
              %kbd Enter
              when certain form element has focus.
            %blockquote
              %p Depending on the browser, the Enter key may only cause a form submission if the form has exactly one text field, or only when there is a submit button present. The interface should not rely on a particular behavior for this key unless the issue is forced by observing the keypress event for presses of the Enter key.
            %p For example, consider the HTML:
            %pre
              :preserve
                &lt;form id="target" action="destination.html"&gt;
                  &lt;input type="text" value="Hello there" /&gt;
                  &lt;input type="submit" value="Go" /&gt;
                &lt;/form&gt;
                &lt;div id="other"&gt;
                  Trigger the handler
                &lt;/div&gt;            %p The event handler can be bound to the form:
            %pre
              :preserve
                $('#target').submit(function() {
                  alert('Handler for .submit() called.');
                  return false;
                });            %p
              Now when the form is submitted, the message is alerted. This happens prior to the actual submission, so we can cancel the submit action by calling
              %code .preventDefault()
              on the event object or by returning
              %code false
              from our handler. We can trigger the event manually when another element is clicked:
            %pre
              :preserve
                $('#other').click(function() {
                  $('#target').submit();
                });            %p
              After this code executes, clicks on
              %span.output Trigger the handler
              will also display the message. In addition, the default
              %code submit
              action on the form will be fired, so the form will be submitted.
            %p
              The JavaScript
              %code submit
              event does not bubble in Internet Explorer. However, scripts that rely on event delegation with the
              %code submit
              event will work consistently across browsers as of jQuery 1.4, which has normalized the event's behavior.
          %h3 Examples:
          #entry-examples.entry-examples
            #example-0
              %h4
                Example:
                %span.desc If you'd like to prevent forms from being submitted unless a flag variable is set, try:
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                    
                      p { margin:0; color:blue; }
                      div,p { margin-left:10px; }
                      span { color:red; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;p&gt;Type 'correct' to validate.&lt;/p&gt;
                      &lt;form action="javascript:alert('success!');"&gt;
                        &lt;div&gt;
                          &lt;input type="text" /&gt;
                    
                          &lt;input type="submit" /&gt;
                        &lt;/div&gt;
                      &lt;/form&gt;
                      &lt;span&gt;&lt;/span&gt;
                    &lt;script&gt;
                    
                        $("form").submit(function() {
                          if ($("input:first").val() == "correct") {
                            $("span").text("Validated...").show();
                            return true;
                          }
                          $("span").text("Not valid!").show().fadeOut(1000);
                          return false;
                        });
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
            #example-1
              %h4
                Example:
                %span.desc If you'd like to prevent forms from being submitted unless a flag variable is set, try:
              %pre
                %code.example
                  :preserve
                    $("form").submit( function () {
                      return this.some_flag_variable;
                    } );            #example-2
              %h4
                Example:
                %span.desc To trigger the submit event on the first form on the page, try:
              %pre
                %code.example $("form:first").submit();
