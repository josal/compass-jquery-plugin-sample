!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 .triggerHandler()
      #triggerHandler1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name .triggerHandler( eventType, extraParameters )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#Object"} Object
        .entry-details
          %p.desc
            %strong> Description:
            Execute all handlers attached to an element for an event.
          %ul.signatures
            %li#triggerHandler-eventType-extraParameters.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.2/"} 1.2
                \.triggerHandler( eventType, extraParameters )
              %p.arguement
                %strong> eventType
                A string containing a JavaScript event type, such as
                %code click
                or
                = succeed "." do
                  %code submit
              %p.arguement
                %strong> extraParameters
                An array of additional parameters to pass along to the event handler.
          .longdesc
            %p
              The
              %code .triggerHandler()
              method behaves similarly to
              = succeed "," do
                %code .trigger()
              with the following exceptions:
            %ul
              %li
                The
                %code .triggerHandler()
                method does not cause the default behavior of an event to occur (such as a form submission).
              %li
                While
                %code .trigger()
                will operate on all elements matched by the jQuery object,
                %code .triggerHandler()
                only affects the first matched element.
              %li
                Events created with
                %code .triggerHandler()
                do not bubble up the DOM hierarchy; if they are not handled by the target element directly, they do nothing.
              %li
                Instead of returning the jQuery object (to allow chaining),
                %code .triggerHandler()
                returns whatever value was returned by the last handler it caused to be executed. If no handlers are triggered, it returns
                %code undefined
            %p
              For more information on this method, see the discussion for
              = succeed "." do
                %code
                  %a{:href => "/trigger"} .trigger()
          %h3 Example:
          #entry-examples.entry-examples
            #example-0
              %h4
                %span.desc If you called .triggerHandler() on a focus event - the browser's default focus action would not be triggered, only the event handlers bound to the focus event.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;button id="old"&gt;.trigger("focus")&lt;/button&gt;
                    &lt;button id="new"&gt;.triggerHandler("focus")&lt;/button&gt;&lt;br/&gt;&lt;br/&gt;
                    
                    &lt;input type="text" value="To Be Focused"/&gt;
                    &lt;script&gt;
                    
                    $("#old").click(function(){
                    $("input").trigger("focus");
                    });
                    $("#new").click(function(){
                    $("input").triggerHandler("focus");
                    });
                    $("input").focus(function(){
                    $("&lt;span&gt;Focused!&lt;/span&gt;").appendTo("body").fadeOut(1000);
                    });
                    
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
