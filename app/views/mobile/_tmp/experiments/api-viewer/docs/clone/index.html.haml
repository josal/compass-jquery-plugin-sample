!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 .clone()
      #clone1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name .clone( [ withDataAndEvents ] )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
        .entry-details
          %p.desc
            %strong> Description:
            Create a copy of the set of matched elements.
          %ul.signatures
            %li#clone-withDataAndEvents.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.0/"} 1.0
                \.clone( [ withDataAndEvents ] )
              %p.arguement
                %strong> withDataAndEvents
                A Boolean indicating whether event handlers should be copied along with the elements. As of jQuery 1.4 element data will be copied as well.
          .longdesc
            %p
              The
              %code .clone()
              method, when used in conjunction with one of the insertion methods, is a convenient way to duplicate elements on a page. Consider the following HTML:
            %pre
              :preserve
                &lt;div class="container"&gt;
                  &lt;div class="hello"&gt;Hello&lt;/div&gt;
                  &lt;div class="goodbye"&gt;Goodbye&lt;/div&gt;
                &lt;/div&gt;            %p
              As shown in the discussion for
              = succeed "," do
                %code
                  %a{:href => "/append"} .append()
              normally when we insert an element somewhere in the DOM, it is moved from its old location. So, given the code:
            %pre $('.hello').appendTo('.goodbye');
            %p The resulting DOM structure would be:
            %pre
              :preserve
                &lt;div class="container"&gt;
                  &lt;div class="goodbye"&gt;
                    Goodbye
                    &lt;div class="hello"&gt;Hello&lt;/div&gt;
                  &lt;/div&gt;
                &lt;/div&gt;            %p To prevent this and instead create a copy of the element, we could write the following:
            %pre $('.hello').clone().appendTo('.goodbye');
            %p This would produce:
            %pre
              :preserve
                &lt;div class="container"&gt;
                  &lt;div class="hello"&gt;Hello&lt;/div&gt;
                  &lt;div class="goodbye"&gt;
                    Goodbye
                    &lt;div class="hello"&gt;Hello&lt;/div&gt;
                  &lt;/div&gt;
                &lt;/div&gt;            %blockquote
              %p
                Note that when using the
                %code .clone()
                method, we can modify the cloned elements or their contents before (re-)inserting them into the document.
            %p
              Normally, any event handlers bound to the original element are
              %em not
              copied to the clone. The optional
              = succeed "parameter" do
                %code withDataAndEvents
              allows us to change this behavior, and to instead make copies of all of the event handlers as well, bound to the new copy of the element. As of jQuery 1.4, all element data (attached by the
              %code .data()
              method) is also copied to the new copy.
          %h3 Example:
          #entry-examples.entry-examples
            #example-0
              %h4
                %span.desc Clones all b elements (and selects the clones) and prepends them to all paragraphs.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;, how are you?&lt;/p&gt;
                    &lt;script&gt;$("b").clone().prependTo("p");&lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
              %h4 Result:
              %pre
                %code.results &lt;b&gt;Hello&lt;/b&gt;&lt;p&gt;&lt;b&gt;Hello&lt;/b&gt;, how are you?&lt;/p&gt;
