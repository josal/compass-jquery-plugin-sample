!!!
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 .error()
      #error1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name .error( handler(eventObject) )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
        .entry-details
          %p.desc
            %strong> Description:
            Bind an event handler to the "error" JavaScript event.
          %ul.signatures
            %li#error-handlereventObject.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.0/"} 1.0
                \.error( handler(eventObject) )
              %p.arguement
                %strong> handler(eventObject)
                A function to execute when the event is triggered.
          .longdesc
            %p
              This method is a shortcut for
              = succeed "." do
                %code .bind('error', handler)
            %p
              The
              %code error
              event is sent to elements, such as images, that are referenced by a document and loaded by the browser. It is called if the element was not loaded correctly.
            %p For example, consider a page with a simple image:
            %pre &lt;img src="missing.png" alt="Book" id="book" /&gt;
            %p The event handler can be bound to the image:
            %pre
              :preserve
                $('#book').error(function() {
                  alert('Handler for .error() called.')
                });
            %p If the image cannot be loaded (for example, because it is not present at the supplied URL), the alert  is displayed:
            %p
              %span.output Handler for .error() called.
            %blockquote
              %p
                This event may not be correctly fired when the page is served locally. Since
                %code error
                relies on normal HTTP status codes, it will generally not be triggered if the URL uses the
                %code file:
                protocol.
          %h3 Examples:
          #entry-examples.entry-examples
            #example-0
              %h4
                Example:
                %span.desc To keep a server-side log of JavaScript errors, you might want to:
              %pre
                %code.example
                  :preserve
                    $(window).error(function(msg, url, line){
                      jQuery.post("js_error_log.php", { msg: msg, url: url, line: line });
                    });            #example-1
              %h4
                Example:
                %span.desc To hide JavaScript errors from the user, you can try:
              %pre
                %code.example
                  :preserve
                    $(window).error(function(){
                      return true;
                    });            #example-2
              %h4
                Example:
                %span.desc To hide the "broken image" icons for your IE users, you can try:
              %pre
                %code.example
                  :preserve
                    $("img").error(function(){
                      $(this).hide();
                    });