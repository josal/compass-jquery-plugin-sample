!!!
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 .each()
      #each1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name .each( function(index, Element) )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
        .entry-details
          %p.desc
            %strong> Description:
            Iterate over a jQuery object, executing a function for each matched element.
          %ul.signatures
            %li.signature{:id => "each-functionindex, Element"}
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.0/"} 1.0
                \.each( function(index, Element) )
              %p.arguement
                %strong> function(index, Element)
                A function to execute for each matched element.
          .longdesc
            %p
              The
              %code .each()
              method is designed to make DOM looping constructs concise and less error-prone. When called it iterates over the DOM elements that are part of the jQuery object. Each time the callback runs, it is passed the current loop iteration, beginning from 0. More importantly, the callback is fired in the context of the current DOM element, so the keyword
              %code this
              refers to the element.
            %p Suppose we had a simple unordered list on the page:
            %pre
              :preserve
                &lt;ul&gt;
                    &lt;li&gt;foo&lt;/li&gt;
                    &lt;li&gt;bar&lt;/li&gt;
                  &lt;/ul&gt;
                              %p We can select the list items and iterate across them:
            %pre
              :preserve
                $('li').each(function(index) {
                    alert(index + ': ' + $(this).text());
                  });
                              %p A message is thus alerted for each item in the list:
            %p
              %span.output 0: foo
              %br
                %span.output 1: bar
            %p
              We can stop the loop from within the callback function by returning
              = succeed "." do
                %code false
          %h3 Examples:
          #entry-examples.entry-examples
            #example-0
              %h4
                Example:
                %span.desc Iterates over three divs and sets their color property.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      div { color:red; text-align:center; cursor:pointer; 
                            font-weight:bolder; width:300px; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;div&gt;Click here&lt;/div&gt;
                    
                      &lt;div&gt;to iterate through&lt;/div&gt;
                      &lt;div&gt;these divs.&lt;/div&gt;
                    &lt;script&gt;
                        $(document.body).click(function () {
                          $("div").each(function (i) {
                            if (this.style.color != "blue") {
                              this.style.color = "blue";
                            } else {
                              this.style.color = "";
                            }
                          });
                        });&lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
            #example-1
              %h4
                Example:
                %span.desc If you want to have the jQuery object instead of the regular DOM element, use the $(this) function, for example:
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      ul { font-size:18px; margin:0; }
                      span { color:blue; text-decoration:underline; cursor:pointer; }
                      .example { font-style:italic; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	To do list: &lt;span&gt;(click here to change)&lt;/span&gt;
                      &lt;ul&gt;
                        &lt;li&gt;Eat&lt;/li&gt;
                        &lt;li&gt;Sleep&lt;/li&gt;
                    
                        &lt;li&gt;Be merry&lt;/li&gt;
                      &lt;/ul&gt;
                    &lt;script&gt;
                        $("span").click(function () {
                          $("li").each(function(){
                            $(this).toggleClass("example");
                          });
                        });
                    
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
            #example-2
              %h4
                Example:
                %span.desc You can use 'return' to break out of each() loops early.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      div { width:40px; height:40px; margin:5px; float:left;
                            border:2px blue solid; text-align:center; }
                      span { color:red; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;button&gt;Change colors&lt;/button&gt; 
                      &lt;span&gt;&lt;/span&gt;
                      &lt;div&gt;&lt;/div&gt;
                      &lt;div&gt;&lt;/div&gt;
                    
                      &lt;div&gt;&lt;/div&gt;
                      &lt;div&gt;&lt;/div&gt;
                      &lt;div id="stop"&gt;Stop here&lt;/div&gt;
                      &lt;div&gt;&lt;/div&gt;
                    
                      &lt;div&gt;&lt;/div&gt;
                      &lt;div&gt;&lt;/div&gt;
                    &lt;script&gt;
                        $("button").click(function () {
                          $("div").each(function (index, domEle) {
                            // domEle == this
                            $(domEle).css("backgroundColor", "yellow"); 
                            if ($(this).is("#stop")) {
                              $("span").text("Stopped at div index #" + index);
                              return false;
                            }
                          });
                        });
                    
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
