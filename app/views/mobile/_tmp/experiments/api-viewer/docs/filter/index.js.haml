!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 .filter()
      #filter1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name .filter( selector )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
        .entry-details
          %p.desc
            %strong> Description:
            Reduce the set of matched elements to those that match the selector or pass the function's test.
          %ul.signatures
            %li#filter-selector.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.0/"} 1.0
                \.filter( selector )
              %p.arguement
                %strong> selector
                A string containing a selector expression to match elements against.
            %li#filter-functionindex.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.0/"} 1.0
                \.filter( function(index) )
              %p.arguement
                %strong> function(index)
                A function used as a test for each element in the set.
                %code this
                is the current DOM element.
          .longdesc
            %p
              Given a jQuery object that represents a set of DOM elements, the
              %code .filter()
              method constructs a new jQuery object from a subset of the matching elements. The supplied selector is tested against each element; all elements matching the selector will be included in the result.
            %p Consider a page with a simple list on it:
            %p We can apply this method to the set of list items:
            %pre
              :preserve
                
                  $('li').filter(':even').css('background-color', 'red');
            %p
              The result of this call is a red background for items 1, 3, and 5, as they match the selector (recall that
              %code :even
              and
              %code :odd
              use 0-based indexing).
            %h4#using-filter-function Using a Filter Function
            %p
              The second form of this method allows us to filter elements against a function rather than a selector. For each element, if the function returns
              = succeed "," do
                %code true
              the element will be included in the filtered set; otherwise, it will be excluded. Suppose we have a somewhat more involved HTML snippet:
            %pre
              :preserve
                
                &lt;ul&gt;
                  &lt;li&gt;&lt;strong&gt;list&lt;/strong&gt; item 1 -
                    one strong tag&lt;/li&gt;
                  &lt;li&gt;&lt;strong&gt;list&lt;/strong&gt; item &lt;strong&gt;2&lt;/strong&gt; -
                    two &lt;span&gt;strong tags&lt;/span&gt;&lt;/li&gt;
                  &lt;li&gt;list item 3&lt;/li&gt;
                  &lt;li&gt;list item 4&lt;/li&gt;
                  &lt;li&gt;list item 5&lt;/li&gt;
                  &lt;li&gt;list item 6&lt;/li&gt;
                &lt;/ul&gt;
            %p We can select the list items, then filter them based on their contents:
            %pre
              :preserve
                
                $('li').filter(function(index) {
                  return $('strong', this).length == 1;
                }).css('background-color', 'red');
            %p
              This code will alter the first list item only, as it contains exactly one
              %code &lt;strong&gt;
              tag. Within the filter function,
              %code this
              refers to each DOM element in turn. The parameter passed to the function tells us the index of that DOM element within the set matched by the jQuery object.
            %p
              We can also take advantage of the
              %code index
              passed through the function, which indicates the 0-based position of the element within the unfiltered set of matched elements:
            %pre
              :preserve
                
                $('li').filter(function(index) {
                  return index % 3 == 2;
                }).css('background-color', 'red');
            %p
              This alteration to the code will cause the third and sixth list items to be highlighted, as it uses the modulus operator (
              %code> %
              ) to select every item with an
              %code index
              value that, when divided by 3, has a remainder of
              = succeed "." do
                %code 2
          %h3 Examples:
          #entry-examples.entry-examples
            #example-0
              %h4
                Example:
                %span.desc Change the color of all divs then put a border around only some of them.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      div { width:60px; height:60px; margin:5px; float:left; 
                            border:2px white solid;}
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;div&gt;&lt;/div&gt;
                    
                      &lt;div class="middle"&gt;&lt;/div&gt;
                      &lt;div class="middle"&gt;&lt;/div&gt;
                      &lt;div class="middle"&gt;&lt;/div&gt;
                      &lt;div class="middle"&gt;&lt;/div&gt;
                    
                      &lt;div&gt;&lt;/div&gt;
                    &lt;script&gt;
                    
                        $("div").css("background", "#c8ebcc")
                                .filter(".middle")
                                .css("border-color", "red");
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
            #example-1
              %h4
                Example:
                %span.desc Selects all paragraphs and removes those without a class "selected".
              %pre
                %code.example $("p").filter(".selected")
            #example-2
              %h4
                Example:
                %span.desc Selects all paragraphs and removes those that aren't of class "selected" or the first one.
              %pre
                %code.example $("p").filter(".selected, :first")
            #example-3
              %h4
                Example:
                %span.desc Change the color of all divs then put a border to specific ones.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      div { width:60px; height:60px; margin:5px; float:left; 
                            border:3px white solid; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;div id="first"&gt;&lt;/div&gt;
                      &lt;div id="second"&gt;&lt;/div&gt;
                      &lt;div id="third"&gt;&lt;/div&gt;
                    
                      &lt;div id="fourth"&gt;&lt;/div&gt;
                      &lt;div id="fifth"&gt;&lt;/div&gt;
                      &lt;div id="sixth"&gt;&lt;/div&gt;
                    &lt;script&gt;
                        $("div").css("background", "#b4b0da")
                                .filter(function (index) {
                                      return index == 1 || $(this).attr("id") == "fourth";
                                    })
                                .css("border", "3px double red");
                    
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
            #example-4
              %h4
                Example:
                %span.desc Remove all elements that have a descendant ol element
              %pre
                %code.example
                  :preserve
                    $("div").filter(function(index) {
                       return $("ol", this).length == 0;
                     });