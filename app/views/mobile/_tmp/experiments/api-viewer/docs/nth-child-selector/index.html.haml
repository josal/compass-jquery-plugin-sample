!!!
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 :nth-child Selector
      #nth-child1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name nth-child
          selector
        .entry-details
          %h4.name
            %span.versionAdded>
              version added:
              %a{:href => "/version/1.1.4/"} 1.1.4
            jQuery(':nth-child(index/even/odd/equation)')
          %ul.signatures
            %li
              %dl.arguments
                %dt index
                %dd
                  The index of each child to match, starting with
                  = succeed "," do
                    %code 1
                  the string
                  %code even
                  or
                  = succeed "," do
                    %code odd
                  or an equation ( eg.
                  = succeed "," do
                    %code :nth-child(even)
                  %code :nth-child(4n)
                  )
          %p.desc
            %strong> Description:
            Selects all elements that are the nth-child of their parent.
          .longdesc
            %p
              Because jQuery's implementation of
              %code :nth-child(n)
              is strictly derived from the CSS specification, the value of
              %code n
              is "1-indexed", meaning that the counting starts at 1. For all other selector expressions, however, jQuery follows JavaScript's "0-indexed" counting. Therefore, given a single
              %code &lt;ul&gt;
              containing two
              = succeed "s," do
                %code &lt;li&gt;
              %code $('li:nth-child(1)')
              selects the first
              %code &lt;li&gt;
              while
              %code $('li:eq(1)')
              selects the second.
            %p
              The
              %code :nth-child(n)
              pseudo-class is easily confused with
              = succeed "," do
                %code :eq(n)
              even though the two can result in dramatically different matched elements. With
              = succeed "," do
                %code :nth-child(n)
              all children are counted, regardless of what they are, and the specified element is selected only if it matches the selector attached to the pseudo-class. With
              %code :eq(n)
              only the selector attached to the pseudo-class is counted, not limited to children of any other element, and the nth one is selected.
            %p
              Further discussion of this unusual usage can be found in the
              = succeed "." do
                %a{:href => "http://www.w3.org/TR/css3-selectors/#nth-child-pseudo"} W3C CSS specification
          %h3 Examples:
          #entry-examples.entry-examples
            #example-0
              %h4
                Example:
                %span.desc Finds the second li in each matched ul and notes it.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                    
                      div { float:left; }
                      span { color:blue; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;div&gt;&lt;ul&gt;
                        &lt;li&gt;John&lt;/li&gt;
                        &lt;li&gt;Karl&lt;/li&gt;
                        &lt;li&gt;Brandon&lt;/li&gt;
                    
                      &lt;/ul&gt;&lt;/div&gt;
                      &lt;div&gt;&lt;ul&gt;
                        &lt;li&gt;Sam&lt;/li&gt;
                      &lt;/ul&gt;&lt;/div&gt;
                    
                      &lt;div&gt;&lt;ul&gt;
                        &lt;li&gt;Glen&lt;/li&gt;
                        &lt;li&gt;Tane&lt;/li&gt;
                        &lt;li&gt;Ralph&lt;/li&gt;
                    
                        &lt;li&gt;David&lt;/li&gt;
                      &lt;/ul&gt;&lt;/div&gt;
                    &lt;script&gt;$("ul li:nth-child(2)").append("&lt;span&gt; - 2nd!&lt;/span&gt;");&lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
            #example-1
              %h4
                Example:
                %span.desc This is a playground to see how the selector works with different strings.  Notice that this is different from the :even and :odd which have no regard for parent and just filter the list of elements to every other one.  The :nth-child, however, counts the index of the child to its particular parent.  In any case, it's easier to see than explain so...
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      button { display:block; font-size:12px; width:100px; }
                      div { float:left; margin:10px; font-size:10px; 
                            border:1px solid black; }
                      span { color:blue; font-size:18px; }
                      #inner { color:red; }
                      td { width:50px; text-align:center; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;div&gt;
                        &lt;button&gt;:nth-child(even)&lt;/button&gt;
                        &lt;button&gt;:nth-child(odd)&lt;/button&gt;
                        &lt;button&gt;:nth-child(3n)&lt;/button&gt;
                    
                        &lt;button&gt;:nth-child(2)&lt;/button&gt;
                      &lt;/div&gt;
                      &lt;div&gt;
                        &lt;button&gt;:nth-child(3n+1)&lt;/button&gt;
                        &lt;button&gt;:nth-child(3n+2)&lt;/button&gt;
                    
                        &lt;button&gt;:even&lt;/button&gt;
                        &lt;button&gt;:odd&lt;/button&gt;
                      &lt;/div&gt;
                      &lt;div&gt;&lt;table&gt;
                    
                        &lt;tr&gt;&lt;td&gt;John&lt;/td&gt;&lt;/tr&gt;
                        &lt;tr&gt;&lt;td&gt;Karl&lt;/td&gt;&lt;/tr&gt;
                        &lt;tr&gt;&lt;td&gt;Brandon&lt;/td&gt;&lt;/tr&gt;
                    
                        &lt;tr&gt;&lt;td&gt;Benjamin&lt;/td&gt;&lt;/tr&gt;
                      &lt;/table&gt;&lt;/div&gt;
                      &lt;div&gt;&lt;table&gt;
                        &lt;tr&gt;&lt;td&gt;Sam&lt;/td&gt;&lt;/tr&gt;
                    
                      &lt;/table&gt;&lt;/div&gt;
                      &lt;div&gt;&lt;table&gt;
                        &lt;tr&gt;&lt;td&gt;Glen&lt;/td&gt;&lt;/tr&gt;
                        &lt;tr&gt;&lt;td&gt;Tane&lt;/td&gt;&lt;/tr&gt;
                    
                        &lt;tr&gt;&lt;td&gt;Ralph&lt;/td&gt;&lt;/tr&gt;
                        &lt;tr&gt;&lt;td&gt;David&lt;/td&gt;&lt;/tr&gt;
                        &lt;tr&gt;&lt;td&gt;Mike&lt;/td&gt;&lt;/tr&gt;
                    
                        &lt;tr&gt;&lt;td&gt;Dan&lt;/td&gt;&lt;/tr&gt;
                      &lt;/table&gt;&lt;/div&gt;
                      &lt;span&gt;
                        tr&lt;span id="inner"&gt;&lt;/span&gt;
                    
                      &lt;/span&gt;
                    &lt;script&gt;
                        $("button").click(function () {
                          var str = $(this).text();
                          $("tr").css("background", "white");
                          $("tr" + str).css("background", "#ff0000");
                          $("#inner").text(str);
                        });
                    
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
