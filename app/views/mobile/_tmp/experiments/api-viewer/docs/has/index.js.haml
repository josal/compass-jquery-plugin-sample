!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 .has()
      #has1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name .has( selector )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
        .entry-details
          %p.desc
            %strong> Description:
            Reduce the set of matched elements to those that have a descendant that matches the selector or DOM element.
          %ul.signatures
            %li#has-selector.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.4/"} 1.4
                \.has( selector )
              %p.arguement
                %strong> selector
                A string containing a selector expression to match elements against.
            %li#has-contained.signature
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.4/"} 1.4
                \.has( contained )
              %p.arguement
                %strong> contained
                A DOM element to match elements against.
          .longdesc
            %p
              Given a jQuery object that represents a set of DOM elements, the
              %code .has()
              method constructs a new jQuery object from a subset of the matching elements. The supplied selector is tested against the descendants of the matching elements; the element will be included in the result if any of its descendant elements matches the selector.
            %p Consider a page with a nested list as follows:
            %pre
              :preserve
                
                 &lt;ul&gt;
                  &lt;li&gt;list item 1&lt;/li&gt;
                  &lt;li&gt;list item 2
                    &lt;ul&gt;
                      &lt;li&gt;list item 2-a&lt;/li&gt;
                      &lt;li&gt;list item 2-b&lt;/li&gt;
                    &lt;/ul&gt;
                  &lt;/li&gt;
                  &lt;li&gt;list item 3&lt;/li&gt;
                  &lt;li&gt;list item 4&lt;/li&gt;
                &lt;/ul&gt;
            %p We can apply this method to the set of list items as follows:
            %pre $('li').has('ul').css('background-color', 'red');
            %p
              The result of this call is a red background for item 2, as it is the only
              %code &lt;li&gt;
              that has a
              %code &lt;ul&gt;
              among its descendants.
          %h3 Example:
          #entry-examples.entry-examples
            #example-0
              %h4
                %span.desc Check if an element is inside another.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      .full { border: 1px solid red; }
                    &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	
                    &lt;ul&gt;&lt;li&gt;Does the UL contain an LI?&lt;/li&gt;&lt;/ul&gt;
                    
                    &lt;script&gt;
                      $("ul").append("&lt;li&gt;" + ($("ul").has("li").length ? "Yes" : "No") + "&lt;/li&gt;");
                      $("ul").has("li").addClass("full");
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
