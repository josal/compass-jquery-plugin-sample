!!!
%html{:lang => "en"}
  %head
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 jQuery.data()
      %div{"data-role" => "content", "data-theme" => "c", :id => "jQuery.data1"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name jQuery.data( element, key, value )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
        .entry-details
          %p.desc
            %strong> Description:
            Store arbitrary data associated with the specified element.
          %ul.signatures
            %li.signature{:id => "jQuery.data-element-key-value"}
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.2.3/"} 1.2.3
                jQuery.data( element, key, value )
              %p.arguement
                %strong> element
                The DOM element to associate with the data.
              %p.arguement
                %strong> key
                A string naming the piece of data to set.
              %p.arguement
                %strong> value
                The new data value.
          .longdesc
            %p
              %strong Note:
              This is a low-level method; you should probably use
              %code
                %a{:href => "/data"} .data()
              instead.
            %p
              The
              %code jQuery.data()
              method allows us to attach data of any type to DOM elements in a way that is safe from circular references and therefore from memory leaks. We can set several distinct values for a single element and retrieve them later:
            %pre
              :preserve
                jQuery.data(document.body, 'foo', 52);
                		jQuery.data(document.body, 'bar', 'test');          %h3 Example:
          #entry-examples.entry-examples
            #example-0
              %h4
                %span.desc Store then retrieve a value from the div element.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      div { color:blue; }
                      span { color:red; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;div&gt;
                        The values stored were 
                        &lt;span&gt;&lt;/span&gt;
                        and
                        &lt;span&gt;&lt;/span&gt;
                      &lt;/div&gt;
                    &lt;script&gt;var div = $("div")[0];
                        jQuery.data(div, "test", { first: 16, last: "pizza!" });
                        $("span:first").text(jQuery.data(div, "test").first);
                        $("span:last").text(jQuery.data(div, "test").last);&lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
      %div{"data-role" => "content", "data-theme" => "c", :id => "jQuery.data2"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name jQuery.data( element, key )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#Object"} Object
        .entry-details
          %p.desc
            %strong> Description:
            Returns value at named data store for the element, as set by jQuery.data(element, name, value), or the full data store for the element.
          %ul.signatures
            %li.signature{:id => "jQuery.data-element-key"}
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.2.3/"} 1.2.3
                jQuery.data( element, key )
              %p.arguement
                %strong> element
                The DOM element to query for the data.
              %p.arguement
                %strong> key
                Name of the data stored.
            %li.signature{:id => "jQuery.data-element"}
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.4/"} 1.4
                jQuery.data( element )
              %p.arguement
                %strong> element
                The DOM element to query for the data.
          .longdesc
            %p
              %strong Note:
              This is a low-level method; you should probably use
              %code
                %a{:href => "/data"} .data()
              instead.
            %p
              The
              %code jQuery.data()
              method allows us to attach data of any type to DOM elements in a way that is safe from circular references and therefore from memory leaks. We can retrieve several distinct values for a single element one at a time, or as a set:
            %pre
              :preserve
                alert(jQuery.data( document.body, 'foo' );
                alert(jQuery.data( document.body ));            %p
              The above lines alert the data values that were set on the
              %code body
              element. If nothing was set on that element, an empty string is returned.
            %p
              Calling
              %code jQuery.data(element)
              retrieves all of the element's associated values as a JavaScript object. Note that jQuery itself uses this method to store data for internal use, such as event handlers, so do not assume that it contains only data that your own code has stored.
          %h3 Example:
          #entry-examples.entry-examples
            #example-0
              %h4
                %span.desc Get the data named "blah" stored at for an element.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                    div { margin:5px; background:yellow; }
                    button { margin:5px; font-size:14px; }
                    p { margin:5px; color:blue; }
                    span { color:red; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	&lt;div&gt;A div&lt;/div&gt;
                    &lt;button&gt;Get "blah" from the div&lt;/button&gt;
                    &lt;button&gt;Set "blah" to "hello"&lt;/button&gt;
                    
                    &lt;button&gt;Set "blah" to 86&lt;/button&gt;
                    &lt;button&gt;Remove "blah" from the div&lt;/button&gt;
                    &lt;p&gt;The "blah" value of this div is &lt;span&gt;?&lt;/span&gt;&lt;/p&gt;
                    &lt;script&gt;
                    $("button").click(function(e) {
                      var value, div = $("div")[0];
                    
                      switch ($("button").index(this)) {
                        case 0 :
                          value = jQuery.data(div, "blah");
                          break;
                        case 1 :
                          jQuery.data(div, "blah", "hello");
                          value = "Stored!";
                          break;
                        case 2 :
                          jQuery.data(div, "blah", 86);
                          value = "Stored!";
                          break;
                        case 3 :
                          jQuery.removeData(div, "blah");
                          value = "Removed!";
                          break;
                      }
                    
                      $("span").text("" + value);
                    });
                    
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
