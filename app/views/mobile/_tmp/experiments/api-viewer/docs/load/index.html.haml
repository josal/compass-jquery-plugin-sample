!!!
%html{:lang => "en"}
  %head
    %meta{:charset => "utf-8"}/
    %meta{:content => "text/html; charset=UTF-8", "http-equiv" => "content-type"}/
  %body
    %div{"data-role" => "page"}
      %div{"data-role" => "header"}
        %h1 .load()
      #load1{"data-role" => "content", "data-theme" => "c"}
        %h2.jq-clearfix.roundTop.section-title
          %span.name .load( url, [ data ], [ complete(responseText, textStatus, XMLHttpRequest) ] )
          %span.returns
            Returns:
            %a.return{:href => "http://docs.jquery.com/Types#jQuery"} jQuery
        .entry-details
          %p.desc
            %strong> Description:
            Load data from the server and place the returned HTML into the matched element.
          %ul.signatures
            %li.signature{:id => "load-url-data-completeresponseText, textStatus, XMLHttpRequest"}
              %h4.name
                %span.versionAdded>
                  version added:
                  %a{:href => "/category/version/1.0/"} 1.0
                \.load( url, [ data ], [ complete(responseText, textStatus, XMLHttpRequest) ] )
              %p.arguement
                %strong> url
                A string containing the URL to which the request is sent.
              %p.arguement
                %strong> data
                A map or string that is sent to the server with the request.
              %p.arguement
                %strong> complete(responseText, textStatus, XMLHttpRequest)
                A callback function that is executed when the request completes.
          .longdesc
            %p
              This method is the simplest way to fetch data from the server. It is roughly equivalent to
              %code $.get(url, data, success)
              except that it is a method rather than global function and it has an implicit callback function.  When a successful response is detected (i.e. when
              %code textStatus
              is "success" or "notmodified"),
              %code .load()
              sets the HTML contents of the matched element to the returned data. This means that most uses of the method can be quite simple:
            %pre $('#result').load('ajax/test.html');
            %p The provided callback, if any, is executed after this post-processing has been performed:
            %pre
              :preserve
                $('#result').load('ajax/test.html', function() {
                  alert('Load was performed.');
                });            %p
              In the two examples above, if the current document does not contain an element with an ID of "result," the
              %code .load()
              method is not executed.
            %p The POST method is used if data is provided as an object; otherwise, GET is assumed.
            %blockquote
              %p
                Note: The event handling suite also has a method named
                = succeed "." do
                  %code
                    %a{:href => "/load-event"} .load()
                Which one is fired depends on the set of arguments passed.
            %h4 Loading Page Fragments
            %p
              The
              %code .load()
              method, unlike
              = succeed "," do
                %code
                  %a{:href => "/jQuery.get"} $.get()
              allows us to specify a portion of the remote document to be inserted. This is achieved with a special syntax for the
              %code url
              parameter. If one or more space characters are included in the string, the portion of the string following the first space is assumed to be a jQuery selector that determines the content to be loaded.
            %p We could modify the example above to fetch only part of the document:
            %pre $('#result').load('ajax/test.html #container');
            %p
              When this method executes, it retrieves the content of
              = succeed "," do
                %code ajax/test.html
              but then jQuery parses the returned document to find the element with an ID of
              = succeed "." do
                %code container
              This element, along with its contents, is inserted into the element with an ID of
              = succeed "," do
                %code result
              and the rest of the retrieved document is discarded.
          %h3 Examples:
          #entry-examples.entry-examples
            #example-0
              %h4
                Example:
                %span.desc Load the main page's footer navigation into an ordered list.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                     body{ font-size: 12px; font-family: Arial; }
                     &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	
                    &lt;b&gt;Footer navigation:&lt;/b&gt;
                    &lt;ol id="new-nav"&gt;&lt;/ol&gt;
                    
                    &lt;script&gt;
                      $("#new-nav").load("/ #jq-footerNavigation li");
                    &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
            #example-1
              %h4
                Example:
                %span.desc Display a notice if the Ajax request encounters an error.
              %pre
                %code.example.demo-code
                  :preserve
                    &lt;!DOCTYPE html&gt;
                    &lt;html&gt;
                    &lt;head&gt;
                      &lt;style&gt;
                      body{ font-size: 12px; font-family: Arial; }
                      &lt;/style&gt;
                      &lt;script src="http://code.jquery.com/jquery-latest.js"&gt;&lt;/script&gt;
                    &lt;/head&gt;
                    &lt;body&gt;
                    	
                    &lt;b&gt;Successful Response (should be blank):&lt;/b&gt;
                    &lt;div id="success"&gt;&lt;/div&gt;
                    &lt;b&gt;Error Response:&lt;/b&gt;
                    &lt;div id="error"&gt;&lt;/div&gt;
                      
                    &lt;script&gt;
                    $("#success").load("/not-here.php", function(response, status, xhr) {
                      if (status == "error") {
                        var msg = "Sorry but there was an error: ";
                        $("#error").html(msg + xhr.status + " " + xhr.statusText);
                      }
                    });
                      &lt;/script&gt;
                    &lt;/body&gt;
                    &lt;/html&gt;              %h4 Demo:
              .demo.code-demo
            #example-2
              %h4
                Example:
                %span.desc Load the feeds.html file into the div with the ID of feeds.
              %pre
                %code.example $("#feeds").load("feeds.html");
              %h4 Result:
              %pre
                %code.results &lt;div id="feeds"&gt;&lt;b&gt;45&lt;/b&gt; feeds found.&lt;/div&gt;
            #example-3
              %h4
                Example:
                %span.desc pass arrays of data to the server.
              %pre
                %code.example $("#objectID").load("test.php", { 'choices[]': ["Jon", "Susan"] } );
            #example-4
              %h4
                Example:
                %span.desc Same as above, but will POST the additional parameters to the server and a callback that is executed when the server is finished responding.
              %pre
                %code.example
                  :preserve
                    $("#feeds").load("feeds.php", {limit: 25}, function(){
                    alert("The last 25 entries in the feed have been loaded");
                    });